
Masinuta_Autonoma.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000121a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000053c  00800060  0000121a  000012ae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000001c9  0080059c  0080059c  000017ea  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000017ea  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000181c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000120  00000000  00000000  00001858  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000153e  00000000  00000000  00001978  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ad0  00000000  00000000  00002eb6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b3f  00000000  00000000  00003986  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000308  00000000  00000000  000044c8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000823  00000000  00000000  000047d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009c6  00000000  00000000  00004ff3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  000059b9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 30 03 	jmp	0x660	; 0x660 <__vector_4>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 07 03 	jmp	0x60e	; 0x60e <__vector_10>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 e4 02 	jmp	0x5c8	; 0x5c8 <__vector_16>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	15 e0       	ldi	r17, 0x05	; 5
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ea e1       	ldi	r30, 0x1A	; 26
      68:	f2 e1       	ldi	r31, 0x12	; 18
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	ac 39       	cpi	r26, 0x9C	; 156
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	27 e0       	ldi	r18, 0x07	; 7
      78:	ac e9       	ldi	r26, 0x9C	; 156
      7a:	b5 e0       	ldi	r27, 0x05	; 5
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a5 36       	cpi	r26, 0x65	; 101
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 a3 06 	call	0xd46	; 0xd46 <main>
      8a:	0c 94 0b 09 	jmp	0x1216	; 0x1216 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <init_aplicatie>:
   int putere_motor=0;
 


  void init_aplicatie()
  {
      92:	08 95       	ret

00000094 <display_informatii>:
	schimbare_continut_display();

  }
  
  void display_informatii()
  {
      94:	cf 92       	push	r12
      96:	df 92       	push	r13
      98:	ef 92       	push	r14
      9a:	ff 92       	push	r15
      9c:	0f 93       	push	r16
      9e:	1f 93       	push	r17
      a0:	cf 93       	push	r28
      a2:	df 93       	push	r29
	   int cp2distanta1 = (int)(distanta1);
      a4:	c0 90 53 07 	lds	r12, 0x0753	; 0x800753 <distanta1>
      a8:	d0 90 54 07 	lds	r13, 0x0754	; 0x800754 <distanta1+0x1>
      ac:	e0 90 55 07 	lds	r14, 0x0755	; 0x800755 <distanta1+0x2>
      b0:	f0 90 56 07 	lds	r15, 0x0756	; 0x800756 <distanta1+0x3>
      b4:	c7 01       	movw	r24, r14
      b6:	b6 01       	movw	r22, r12
      b8:	0e 94 8e 07 	call	0xf1c	; 0xf1c <__fixsfsi>
	   
	   Display_array[dreapta_zeci]=(cp2distanta1/10+'0');
      bc:	c0 91 af 05 	lds	r28, 0x05AF	; 0x8005af <Display_array>
      c0:	d0 91 b0 05 	lds	r29, 0x05B0	; 0x8005b0 <Display_array+0x1>
      c4:	0a e0       	ldi	r16, 0x0A	; 10
      c6:	10 e0       	ldi	r17, 0x00	; 0
      c8:	cb 01       	movw	r24, r22
      ca:	b8 01       	movw	r22, r16
      cc:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <__divmodhi4>
      d0:	60 5d       	subi	r22, 0xD0	; 208
      d2:	6e 8f       	std	Y+30, r22	; 0x1e
	   Display_array[dreapta_unitati]=(cp2distanta1%10+'0');
      d4:	80 5d       	subi	r24, 0xD0	; 208
      d6:	8f 8f       	std	Y+31, r24	; 0x1f
	   int cpdistanta1 = (int)(distanta1*100);
      d8:	20 e0       	ldi	r18, 0x00	; 0
      da:	30 e0       	ldi	r19, 0x00	; 0
      dc:	48 ec       	ldi	r20, 0xC8	; 200
      de:	52 e4       	ldi	r21, 0x42	; 66
      e0:	c7 01       	movw	r24, r14
      e2:	b6 01       	movw	r22, r12
      e4:	0e 94 76 08 	call	0x10ec	; 0x10ec <__mulsf3>
      e8:	0e 94 8e 07 	call	0xf1c	; 0xf1c <__fixsfsi>
	   Display_array[dreapta_zecimi]=((cpdistanta1/10)%10+'0');
      ec:	cb 01       	movw	r24, r22
      ee:	b8 01       	movw	r22, r16
      f0:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <__divmodhi4>
      f4:	28 2f       	mov	r18, r24
      f6:	cb 01       	movw	r24, r22
      f8:	b8 01       	movw	r22, r16
      fa:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <__divmodhi4>
      fe:	80 5d       	subi	r24, 0xD0	; 208
     100:	89 a3       	std	Y+33, r24	; 0x21
	   Display_array[dreapta_sutimi]=(cpdistanta1%10+'0');
     102:	20 5d       	subi	r18, 0xD0	; 208
     104:	2a a3       	std	Y+34, r18	; 0x22
	   
	   int cp2distanta2 = (int)(distanta2);
     106:	c0 90 4f 07 	lds	r12, 0x074F	; 0x80074f <distanta2>
     10a:	d0 90 50 07 	lds	r13, 0x0750	; 0x800750 <distanta2+0x1>
     10e:	e0 90 51 07 	lds	r14, 0x0751	; 0x800751 <distanta2+0x2>
     112:	f0 90 52 07 	lds	r15, 0x0752	; 0x800752 <distanta2+0x3>
     116:	c7 01       	movw	r24, r14
     118:	b6 01       	movw	r22, r12
     11a:	0e 94 8e 07 	call	0xf1c	; 0xf1c <__fixsfsi>
	   
	   Display_array[stanga_zeci]=(cp2distanta2/10+'0');
     11e:	cb 01       	movw	r24, r22
     120:	b8 01       	movw	r22, r16
     122:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <__divmodhi4>
     126:	60 5d       	subi	r22, 0xD0	; 208
     128:	69 ab       	std	Y+49, r22	; 0x31
	   Display_array[stanga_unitati]=(cp2distanta2%10+'0');
     12a:	80 5d       	subi	r24, 0xD0	; 208
     12c:	8a ab       	std	Y+50, r24	; 0x32
	   int cpdistanta2 = (int)(distanta2*100);
     12e:	20 e0       	ldi	r18, 0x00	; 0
     130:	30 e0       	ldi	r19, 0x00	; 0
     132:	48 ec       	ldi	r20, 0xC8	; 200
     134:	52 e4       	ldi	r21, 0x42	; 66
     136:	c7 01       	movw	r24, r14
     138:	b6 01       	movw	r22, r12
     13a:	0e 94 76 08 	call	0x10ec	; 0x10ec <__mulsf3>
     13e:	0e 94 8e 07 	call	0xf1c	; 0xf1c <__fixsfsi>
	   Display_array[stanga_zecimi]=((cpdistanta2/10)%10+'0');
     142:	cb 01       	movw	r24, r22
     144:	b8 01       	movw	r22, r16
     146:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <__divmodhi4>
     14a:	28 2f       	mov	r18, r24
     14c:	cb 01       	movw	r24, r22
     14e:	b8 01       	movw	r22, r16
     150:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <__divmodhi4>
     154:	80 5d       	subi	r24, 0xD0	; 208
     156:	8c ab       	std	Y+52, r24	; 0x34
	   Display_array[stanga_sutimi]=(cpdistanta2%10+'0');
     158:	20 5d       	subi	r18, 0xD0	; 208
     15a:	2d ab       	std	Y+53, r18	; 0x35
	  
  }
     15c:	df 91       	pop	r29
     15e:	cf 91       	pop	r28
     160:	1f 91       	pop	r17
     162:	0f 91       	pop	r16
     164:	ff 90       	pop	r15
     166:	ef 90       	pop	r14
     168:	df 90       	pop	r13
     16a:	cf 90       	pop	r12
     16c:	08 95       	ret

0000016e <schimbare_string_de_la>:
  void schimbare_string_de_la(char x[],int poz)
  {
	  int l = strlen(x);
     16e:	fc 01       	movw	r30, r24
     170:	01 90       	ld	r0, Z+
     172:	00 20       	and	r0, r0
     174:	e9 f7       	brne	.-6      	; 0x170 <schimbare_string_de_la+0x2>
     176:	31 97       	sbiw	r30, 0x01	; 1
     178:	9f 01       	movw	r18, r30
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
	  for(int i=0;i<l;i++)
     17e:	12 16       	cp	r1, r18
     180:	13 06       	cpc	r1, r19
     182:	9c f4       	brge	.+38     	; 0x1aa <schimbare_string_de_la+0x3c>
     184:	28 0f       	add	r18, r24
     186:	39 1f       	adc	r19, r25
     188:	fc 01       	movw	r30, r24
	  {
		  Display_array[poz+i]=x[i];
     18a:	68 1b       	sub	r22, r24
     18c:	79 0b       	sbc	r23, r25
     18e:	cb 01       	movw	r24, r22
     190:	8e 0f       	add	r24, r30
     192:	9f 1f       	adc	r25, r31
     194:	a0 91 af 05 	lds	r26, 0x05AF	; 0x8005af <Display_array>
     198:	b0 91 b0 05 	lds	r27, 0x05B0	; 0x8005b0 <Display_array+0x1>
     19c:	a8 0f       	add	r26, r24
     19e:	b9 1f       	adc	r27, r25
     1a0:	81 91       	ld	r24, Z+
     1a2:	8c 93       	st	X, r24
	  
  }
  void schimbare_string_de_la(char x[],int poz)
  {
	  int l = strlen(x);
	  for(int i=0;i<l;i++)
     1a4:	e2 17       	cp	r30, r18
     1a6:	f3 07       	cpc	r31, r19
     1a8:	91 f7       	brne	.-28     	; 0x18e <schimbare_string_de_la+0x20>
     1aa:	08 95       	ret

000001ac <umplere_patratele>:
	  
  }
  void umplere_patratele(int x)
  {
	  int  i;
	  for(i=0;i<x/10;i++)
     1ac:	6a e0       	ldi	r22, 0x0A	; 10
     1ae:	70 e0       	ldi	r23, 0x00	; 0
     1b0:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <__divmodhi4>
     1b4:	cb 01       	movw	r24, r22
     1b6:	18 16       	cp	r1, r24
     1b8:	19 06       	cpc	r1, r25
     1ba:	ac f4       	brge	.+42     	; 0x1e6 <umplere_patratele+0x3a>
     1bc:	68 5d       	subi	r22, 0xD8	; 216
     1be:	7f 4f       	sbci	r23, 0xFF	; 255
     1c0:	28 e2       	ldi	r18, 0x28	; 40
     1c2:	30 e0       	ldi	r19, 0x00	; 0
	  {
		  Display_array[40+i]=(char)(219);
     1c4:	4b ed       	ldi	r20, 0xDB	; 219
     1c6:	e0 91 af 05 	lds	r30, 0x05AF	; 0x8005af <Display_array>
     1ca:	f0 91 b0 05 	lds	r31, 0x05B0	; 0x8005b0 <Display_array+0x1>
     1ce:	e2 0f       	add	r30, r18
     1d0:	f3 1f       	adc	r31, r19
     1d2:	40 83       	st	Z, r20
     1d4:	2f 5f       	subi	r18, 0xFF	; 255
     1d6:	3f 4f       	sbci	r19, 0xFF	; 255
	  
  }
  void umplere_patratele(int x)
  {
	  int  i;
	  for(i=0;i<x/10;i++)
     1d8:	62 17       	cp	r22, r18
     1da:	73 07       	cpc	r23, r19
     1dc:	a1 f7       	brne	.-24     	; 0x1c6 <umplere_patratele+0x1a>
	  {
		  Display_array[40+i]=(char)(219);
	  }
	  for(int j=i;j<=60;j++)
     1de:	8d 33       	cpi	r24, 0x3D	; 61
     1e0:	91 05       	cpc	r25, r1
     1e2:	1c f0       	brlt	.+6      	; 0x1ea <umplere_patratele+0x3e>
     1e4:	08 95       	ret
	  
  }
  void umplere_patratele(int x)
  {
	  int  i;
	  for(i=0;i<x/10;i++)
     1e6:	80 e0       	ldi	r24, 0x00	; 0
     1e8:	90 e0       	ldi	r25, 0x00	; 0
	  {
		  Display_array[40+i]=(char)(219);
	  }
	  for(int j=i;j<=60;j++)
		  Display_array[40+j]=' ';
     1ea:	20 e2       	ldi	r18, 0x20	; 32
     1ec:	e0 91 af 05 	lds	r30, 0x05AF	; 0x8005af <Display_array>
     1f0:	f0 91 b0 05 	lds	r31, 0x05B0	; 0x8005b0 <Display_array+0x1>
     1f4:	e8 0f       	add	r30, r24
     1f6:	f9 1f       	adc	r31, r25
     1f8:	20 a7       	std	Z+40, r18	; 0x28
	  int  i;
	  for(i=0;i<x/10;i++)
	  {
		  Display_array[40+i]=(char)(219);
	  }
	  for(int j=i;j<=60;j++)
     1fa:	01 96       	adiw	r24, 0x01	; 1
     1fc:	8d 33       	cpi	r24, 0x3D	; 61
     1fe:	91 05       	cpc	r25, r1
     200:	ac f3       	brlt	.-22     	; 0x1ec <umplere_patratele+0x40>
     202:	08 95       	ret

00000204 <schimbare_continut_display>:
  
  void schimbare_continut_display()
  {
	 
	 
	  switch (MMI_State_Machine)
     204:	80 91 a9 05 	lds	r24, 0x05A9	; 0x8005a9 <MMI_State_Machine>
     208:	81 30       	cpi	r24, 0x01	; 1
     20a:	99 f1       	breq	.+102    	; 0x272 <schimbare_continut_display+0x6e>
     20c:	38 f0       	brcs	.+14     	; 0x21c <schimbare_continut_display+0x18>
     20e:	82 30       	cpi	r24, 0x02	; 2
     210:	09 f4       	brne	.+2      	; 0x214 <schimbare_continut_display+0x10>
     212:	f4 c0       	rjmp	.+488    	; 0x3fc <schimbare_continut_display+0x1f8>
     214:	83 30       	cpi	r24, 0x03	; 3
     216:	09 f4       	brne	.+2      	; 0x21a <schimbare_continut_display+0x16>
     218:	0b c1       	rjmp	.+534    	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
     21a:	08 95       	ret
	  {
			case MMI_SCREEN1:
				Display_array=Display_array_0;
     21c:	88 e6       	ldi	r24, 0x68	; 104
     21e:	91 e0       	ldi	r25, 0x01	; 1
     220:	90 93 b0 05 	sts	0x05B0, r25	; 0x8005b0 <Display_array+0x1>
     224:	80 93 af 05 	sts	0x05AF, r24	; 0x8005af <Display_array>
				if(counter>(2*logo_time)/3)
     228:	e0 91 62 00 	lds	r30, 0x0062	; 0x800062 <logo_time>
     22c:	f0 91 63 00 	lds	r31, 0x0063	; 0x800063 <logo_time+0x1>
     230:	20 91 a2 05 	lds	r18, 0x05A2	; 0x8005a2 <counter>
     234:	30 91 a3 05 	lds	r19, 0x05A3	; 0x8005a3 <counter+0x1>
     238:	cf 01       	movw	r24, r30
     23a:	88 0f       	add	r24, r24
     23c:	99 1f       	adc	r25, r25
     23e:	63 e0       	ldi	r22, 0x03	; 3
     240:	70 e0       	ldi	r23, 0x00	; 0
     242:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <__divmodhi4>
     246:	62 17       	cp	r22, r18
     248:	73 07       	cpc	r23, r19
     24a:	64 f4       	brge	.+24     	; 0x264 <schimbare_continut_display+0x60>
					{
						Display_array=Display_array_empty;
     24c:	88 eb       	ldi	r24, 0xB8	; 184
     24e:	91 e0       	ldi	r25, 0x01	; 1
     250:	90 93 b0 05 	sts	0x05B0, r25	; 0x8005b0 <Display_array+0x1>
     254:	80 93 af 05 	sts	0x05AF, r24	; 0x8005af <Display_array>
						if(counter>logo_time)
     258:	e2 17       	cp	r30, r18
     25a:	f3 07       	cpc	r31, r19
     25c:	1c f4       	brge	.+6      	; 0x264 <schimbare_continut_display+0x60>
							MMI_State_Machine=MMI_SCREEN2;
     25e:	81 e0       	ldi	r24, 0x01	; 1
     260:	80 93 a9 05 	sts	0x05A9, r24	; 0x8005a9 <MMI_State_Machine>
					}
					
				counter++;	
     264:	2f 5f       	subi	r18, 0xFF	; 255
     266:	3f 4f       	sbci	r19, 0xFF	; 255
     268:	30 93 a3 05 	sts	0x05A3, r19	; 0x8005a3 <counter+0x1>
     26c:	20 93 a2 05 	sts	0x05A2, r18	; 0x8005a2 <counter>
				break;
     270:	08 95       	ret
			
			
			case MMI_SCREEN2:
				Display_array = Display_array_1;
     272:	88 e1       	ldi	r24, 0x18	; 24
     274:	91 e0       	ldi	r25, 0x01	; 1
     276:	90 93 b0 05 	sts	0x05B0, r25	; 0x8005b0 <Display_array+0x1>
     27a:	80 93 af 05 	sts	0x05AF, r24	; 0x8005af <Display_array>

					tasta = verificare_tasta();
     27e:	0e 94 81 03 	call	0x702	; 0x702 <verificare_tasta>
     282:	80 93 aa 05 	sts	0x05AA, r24	; 0x8005aa <tasta>
				if(asteapta_tasta_10==1)
     286:	20 91 a0 05 	lds	r18, 0x05A0	; 0x8005a0 <asteapta_tasta_10>
     28a:	30 91 a1 05 	lds	r19, 0x05A1	; 0x8005a1 <asteapta_tasta_10+0x1>
     28e:	21 30       	cpi	r18, 0x01	; 1
     290:	31 05       	cpc	r19, r1
     292:	f1 f4       	brne	.+60     	; 0x2d0 <schimbare_continut_display+0xcc>
				{
					if(numar_asteptari_curente_tasta_10<5 )
     294:	20 91 9e 05 	lds	r18, 0x059E	; 0x80059e <numar_asteptari_curente_tasta_10>
     298:	30 91 9f 05 	lds	r19, 0x059F	; 0x80059f <numar_asteptari_curente_tasta_10+0x1>
     29c:	25 30       	cpi	r18, 0x05	; 5
     29e:	31 05       	cpc	r19, r1
     2a0:	74 f4       	brge	.+28     	; 0x2be <schimbare_continut_display+0xba>
					if(tasta==10)
     2a2:	8a 30       	cpi	r24, 0x0A	; 10
     2a4:	39 f4       	brne	.+14     	; 0x2b4 <schimbare_continut_display+0xb0>
						numar_asteptari_curente_tasta_10++;
     2a6:	2f 5f       	subi	r18, 0xFF	; 255
     2a8:	3f 4f       	sbci	r19, 0xFF	; 255
     2aa:	30 93 9f 05 	sts	0x059F, r19	; 0x80059f <numar_asteptari_curente_tasta_10+0x1>
     2ae:	20 93 9e 05 	sts	0x059E, r18	; 0x80059e <numar_asteptari_curente_tasta_10>
     2b2:	08 95       	ret
						else
						numar_asteptari_curente_tasta_10=0;
     2b4:	10 92 9f 05 	sts	0x059F, r1	; 0x80059f <numar_asteptari_curente_tasta_10+0x1>
     2b8:	10 92 9e 05 	sts	0x059E, r1	; 0x80059e <numar_asteptari_curente_tasta_10>
     2bc:	08 95       	ret
					else
					{
						numar_asteptari_curente_tasta_10=0;
     2be:	10 92 9f 05 	sts	0x059F, r1	; 0x80059f <numar_asteptari_curente_tasta_10+0x1>
     2c2:	10 92 9e 05 	sts	0x059E, r1	; 0x80059e <numar_asteptari_curente_tasta_10>
						asteapta_tasta_10=0;
     2c6:	10 92 a1 05 	sts	0x05A1, r1	; 0x8005a1 <asteapta_tasta_10+0x1>
     2ca:	10 92 a0 05 	sts	0x05A0, r1	; 0x8005a0 <asteapta_tasta_10>
     2ce:	08 95       	ret
					}
				}
				else
				{
					if(tasta=='>')
     2d0:	8e 33       	cpi	r24, 0x3E	; 62
     2d2:	b1 f5       	brne	.+108    	; 0x340 <schimbare_continut_display+0x13c>
					{
						asteapta_tasta_10=1;
     2d4:	81 e0       	ldi	r24, 0x01	; 1
     2d6:	90 e0       	ldi	r25, 0x00	; 0
     2d8:	90 93 a1 05 	sts	0x05A1, r25	; 0x8005a1 <asteapta_tasta_10+0x1>
     2dc:	80 93 a0 05 	sts	0x05A0, r24	; 0x8005a0 <asteapta_tasta_10>
						if(option==1)
     2e0:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     2e4:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     2e8:	81 30       	cpi	r24, 0x01	; 1
     2ea:	91 05       	cpc	r25, r1
     2ec:	69 f4       	brne	.+26     	; 0x308 <schimbare_continut_display+0x104>
						{
							option=2;
     2ee:	82 e0       	ldi	r24, 0x02	; 2
     2f0:	90 e0       	ldi	r25, 0x00	; 0
     2f2:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     2f6:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
							schimbare_string_de_la("    < Motor >     ",61);
     2fa:	6d e3       	ldi	r22, 0x3D	; 61
     2fc:	70 e0       	ldi	r23, 0x00	; 0
     2fe:	89 e4       	ldi	r24, 0x49	; 73
     300:	95 e0       	ldi	r25, 0x05	; 5
     302:	0e 94 b7 00 	call	0x16e	; 0x16e <schimbare_string_de_la>
     306:	08 95       	ret
						}
						else
						{
							if(option==2)
     308:	02 97       	sbiw	r24, 0x02	; 2
     30a:	69 f4       	brne	.+26     	; 0x326 <schimbare_continut_display+0x122>
							{
								option=3;
     30c:	83 e0       	ldi	r24, 0x03	; 3
     30e:	90 e0       	ldi	r25, 0x00	; 0
     310:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     314:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
								schimbare_string_de_la("< Testare Lumini > ",61);	
     318:	6d e3       	ldi	r22, 0x3D	; 61
     31a:	70 e0       	ldi	r23, 0x00	; 0
     31c:	8c e5       	ldi	r24, 0x5C	; 92
     31e:	95 e0       	ldi	r25, 0x05	; 5
     320:	0e 94 b7 00 	call	0x16e	; 0x16e <schimbare_string_de_la>
     324:	08 95       	ret
							}
							else
							{	option=1;
     326:	81 e0       	ldi	r24, 0x01	; 1
     328:	90 e0       	ldi	r25, 0x00	; 0
     32a:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     32e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
								schimbare_string_de_la("  < Informatii >   ",61);	
     332:	6d e3       	ldi	r22, 0x3D	; 61
     334:	70 e0       	ldi	r23, 0x00	; 0
     336:	80 e7       	ldi	r24, 0x70	; 112
     338:	95 e0       	ldi	r25, 0x05	; 5
     33a:	0e 94 b7 00 	call	0x16e	; 0x16e <schimbare_string_de_la>
     33e:	08 95       	ret
							}
						}
					}
					else if(tasta=='<')
     340:	8c 33       	cpi	r24, 0x3C	; 60
     342:	b1 f5       	brne	.+108    	; 0x3b0 <schimbare_continut_display+0x1ac>
					{
						asteapta_tasta_10=1;
     344:	81 e0       	ldi	r24, 0x01	; 1
     346:	90 e0       	ldi	r25, 0x00	; 0
     348:	90 93 a1 05 	sts	0x05A1, r25	; 0x8005a1 <asteapta_tasta_10+0x1>
     34c:	80 93 a0 05 	sts	0x05A0, r24	; 0x8005a0 <asteapta_tasta_10>
						if(option==1)
     350:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     354:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     358:	81 30       	cpi	r24, 0x01	; 1
     35a:	91 05       	cpc	r25, r1
     35c:	69 f4       	brne	.+26     	; 0x378 <schimbare_continut_display+0x174>
						{	
							option=3;	
     35e:	83 e0       	ldi	r24, 0x03	; 3
     360:	90 e0       	ldi	r25, 0x00	; 0
     362:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     366:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
							schimbare_string_de_la("< Testare Lumini > ",61);
     36a:	6d e3       	ldi	r22, 0x3D	; 61
     36c:	70 e0       	ldi	r23, 0x00	; 0
     36e:	8c e5       	ldi	r24, 0x5C	; 92
     370:	95 e0       	ldi	r25, 0x05	; 5
     372:	0e 94 b7 00 	call	0x16e	; 0x16e <schimbare_string_de_la>
     376:	08 95       	ret
						
						}
						else
						{
							if(option==2)
     378:	02 97       	sbiw	r24, 0x02	; 2
     37a:	69 f4       	brne	.+26     	; 0x396 <schimbare_continut_display+0x192>
							{
								option=1;
     37c:	81 e0       	ldi	r24, 0x01	; 1
     37e:	90 e0       	ldi	r25, 0x00	; 0
     380:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     384:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
								schimbare_string_de_la("  < Informatii >   ",61);		
     388:	6d e3       	ldi	r22, 0x3D	; 61
     38a:	70 e0       	ldi	r23, 0x00	; 0
     38c:	80 e7       	ldi	r24, 0x70	; 112
     38e:	95 e0       	ldi	r25, 0x05	; 5
     390:	0e 94 b7 00 	call	0x16e	; 0x16e <schimbare_string_de_la>
     394:	08 95       	ret
							}
							else
							{	
								option=2;
     396:	82 e0       	ldi	r24, 0x02	; 2
     398:	90 e0       	ldi	r25, 0x00	; 0
     39a:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     39e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
								schimbare_string_de_la("    < Motor >        ",61);	
     3a2:	6d e3       	ldi	r22, 0x3D	; 61
     3a4:	70 e0       	ldi	r23, 0x00	; 0
     3a6:	84 e8       	ldi	r24, 0x84	; 132
     3a8:	95 e0       	ldi	r25, 0x05	; 5
     3aa:	0e 94 b7 00 	call	0x16e	; 0x16e <schimbare_string_de_la>
     3ae:	08 95       	ret
							}
						}
					}
					else if(tasta=='E')
     3b0:	85 34       	cpi	r24, 0x45	; 69
     3b2:	c1 f4       	brne	.+48     	; 0x3e4 <schimbare_continut_display+0x1e0>
					{
						asteapta_tasta_10=1;
     3b4:	81 e0       	ldi	r24, 0x01	; 1
     3b6:	90 e0       	ldi	r25, 0x00	; 0
     3b8:	90 93 a1 05 	sts	0x05A1, r25	; 0x8005a1 <asteapta_tasta_10+0x1>
     3bc:	80 93 a0 05 	sts	0x05A0, r24	; 0x8005a0 <asteapta_tasta_10>
						if(option==1)
     3c0:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     3c4:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     3c8:	81 30       	cpi	r24, 0x01	; 1
     3ca:	91 05       	cpc	r25, r1
     3cc:	21 f4       	brne	.+8      	; 0x3d6 <schimbare_continut_display+0x1d2>
							MMI_State_Machine=MMI_SCREEN3;
     3ce:	82 e0       	ldi	r24, 0x02	; 2
     3d0:	80 93 a9 05 	sts	0x05A9, r24	; 0x8005a9 <MMI_State_Machine>
     3d4:	08 95       	ret
						else if(option==2)
     3d6:	02 97       	sbiw	r24, 0x02	; 2
     3d8:	09 f0       	breq	.+2      	; 0x3dc <schimbare_continut_display+0x1d8>
     3da:	c0 c0       	rjmp	.+384    	; 0x55c <__EEPROM_REGION_LENGTH__+0x15c>
						{
							MMI_State_Machine=MMI_SCREEN4;
     3dc:	83 e0       	ldi	r24, 0x03	; 3
     3de:	80 93 a9 05 	sts	0x05A9, r24	; 0x8005a9 <MMI_State_Machine>
     3e2:	08 95       	ret
						}
					}
					else if(tasta=='x')
     3e4:	88 37       	cpi	r24, 0x78	; 120
     3e6:	09 f0       	breq	.+2      	; 0x3ea <schimbare_continut_display+0x1e6>
     3e8:	b9 c0       	rjmp	.+370    	; 0x55c <__EEPROM_REGION_LENGTH__+0x15c>
					{
						asteapta_tasta_10=1;
     3ea:	81 e0       	ldi	r24, 0x01	; 1
     3ec:	90 e0       	ldi	r25, 0x00	; 0
     3ee:	90 93 a1 05 	sts	0x05A1, r25	; 0x8005a1 <asteapta_tasta_10+0x1>
     3f2:	80 93 a0 05 	sts	0x05A0, r24	; 0x8005a0 <asteapta_tasta_10>
						MMI_State_Machine=MMI_SCREEN2;
     3f6:	80 93 a9 05 	sts	0x05A9, r24	; 0x8005a9 <MMI_State_Machine>
     3fa:	08 95       	ret
				
				break;
			
			
			case MMI_SCREEN3:
			tasta = verificare_tasta();
     3fc:	0e 94 81 03 	call	0x702	; 0x702 <verificare_tasta>
     400:	80 93 aa 05 	sts	0x05AA, r24	; 0x8005aa <tasta>
				Display_array=Display_array_2;
     404:	88 ec       	ldi	r24, 0xC8	; 200
     406:	90 e0       	ldi	r25, 0x00	; 0
     408:	90 93 b0 05 	sts	0x05B0, r25	; 0x8005b0 <Display_array+0x1>
     40c:	80 93 af 05 	sts	0x05AF, r24	; 0x8005af <Display_array>
				display_informatii();
     410:	0e 94 4a 00 	call	0x94	; 0x94 <display_informatii>
			 if(tasta=='x')
     414:	80 91 aa 05 	lds	r24, 0x05AA	; 0x8005aa <tasta>
     418:	88 37       	cpi	r24, 0x78	; 120
     41a:	09 f0       	breq	.+2      	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
     41c:	9f c0       	rjmp	.+318    	; 0x55c <__EEPROM_REGION_LENGTH__+0x15c>
				{
					asteapta_tasta_10=1;
     41e:	81 e0       	ldi	r24, 0x01	; 1
     420:	90 e0       	ldi	r25, 0x00	; 0
     422:	90 93 a1 05 	sts	0x05A1, r25	; 0x8005a1 <asteapta_tasta_10+0x1>
     426:	80 93 a0 05 	sts	0x05A0, r24	; 0x8005a0 <asteapta_tasta_10>
					MMI_State_Machine=MMI_SCREEN2;
     42a:	80 93 a9 05 	sts	0x05A9, r24	; 0x8005a9 <MMI_State_Machine>
     42e:	08 95       	ret
				
				
				
				
			case MMI_SCREEN4:
				Display_array=Display_array_3;
     430:	88 e7       	ldi	r24, 0x78	; 120
     432:	90 e0       	ldi	r25, 0x00	; 0
     434:	90 93 b0 05 	sts	0x05B0, r25	; 0x8005b0 <Display_array+0x1>
     438:	80 93 af 05 	sts	0x05AF, r24	; 0x8005af <Display_array>
				int cp_putere_motor=putere_motor/2;
     43c:	80 91 9c 05 	lds	r24, 0x059C	; 0x80059c <__data_end>
     440:	90 91 9d 05 	lds	r25, 0x059D	; 0x80059d <__data_end+0x1>
     444:	9c 01       	movw	r18, r24
     446:	99 23       	and	r25, r25
     448:	14 f4       	brge	.+4      	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
     44a:	2f 5f       	subi	r18, 0xFF	; 255
     44c:	3f 4f       	sbci	r19, 0xFF	; 255
     44e:	35 95       	asr	r19
     450:	27 95       	ror	r18
				if(cp_putere_motor==100)
     452:	24 36       	cpi	r18, 0x64	; 100
     454:	31 05       	cpc	r19, r1
     456:	41 f4       	brne	.+16     	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
					{
						Display_array[procent_motor_sute] = '1';
     458:	e8 e7       	ldi	r30, 0x78	; 120
     45a:	f0 e0       	ldi	r31, 0x00	; 0
     45c:	81 e3       	ldi	r24, 0x31	; 49
     45e:	84 8f       	std	Z+28, r24	; 0x1c
						Display_array[procent_motor_zeci] = '0';
     460:	80 e3       	ldi	r24, 0x30	; 48
     462:	85 8f       	std	Z+29, r24	; 0x1d
						Display_array[procent_motor_unitati]='0';
     464:	86 8f       	std	Z+30, r24	; 0x1e
     466:	11 c0       	rjmp	.+34     	; 0x48a <__EEPROM_REGION_LENGTH__+0x8a>
					}
				else
					{
						Display_array[procent_motor_sute] = ' ';
     468:	e8 e7       	ldi	r30, 0x78	; 120
     46a:	f0 e0       	ldi	r31, 0x00	; 0
     46c:	40 e2       	ldi	r20, 0x20	; 32
     46e:	44 8f       	std	Z+28, r20	; 0x1c
						Display_array[procent_motor_zeci] = cp_putere_motor/10+'0';
     470:	64 e1       	ldi	r22, 0x14	; 20
     472:	70 e0       	ldi	r23, 0x00	; 0
     474:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <__divmodhi4>
     478:	60 5d       	subi	r22, 0xD0	; 208
     47a:	65 8f       	std	Z+29, r22	; 0x1d
						Display_array[procent_motor_unitati]=cp_putere_motor%10+'0';
     47c:	c9 01       	movw	r24, r18
     47e:	6a e0       	ldi	r22, 0x0A	; 10
     480:	70 e0       	ldi	r23, 0x00	; 0
     482:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <__divmodhi4>
     486:	80 5d       	subi	r24, 0xD0	; 208
     488:	86 8f       	std	Z+30, r24	; 0x1e
					}
				
				umplere_patratele(putere_motor);
     48a:	80 91 9c 05 	lds	r24, 0x059C	; 0x80059c <__data_end>
     48e:	90 91 9d 05 	lds	r25, 0x059D	; 0x80059d <__data_end+0x1>
     492:	0e 94 d6 00 	call	0x1ac	; 0x1ac <umplere_patratele>
				
				tasta = verificare_tasta();
     496:	0e 94 81 03 	call	0x702	; 0x702 <verificare_tasta>
     49a:	80 93 aa 05 	sts	0x05AA, r24	; 0x8005aa <tasta>
				if(asteapta_tasta_10==1)
     49e:	20 91 a0 05 	lds	r18, 0x05A0	; 0x8005a0 <asteapta_tasta_10>
     4a2:	30 91 a1 05 	lds	r19, 0x05A1	; 0x8005a1 <asteapta_tasta_10+0x1>
     4a6:	21 30       	cpi	r18, 0x01	; 1
     4a8:	31 05       	cpc	r19, r1
     4aa:	f1 f4       	brne	.+60     	; 0x4e8 <__EEPROM_REGION_LENGTH__+0xe8>
				{
					if(numar_asteptari_curente_tasta_10<5 )
     4ac:	20 91 9e 05 	lds	r18, 0x059E	; 0x80059e <numar_asteptari_curente_tasta_10>
     4b0:	30 91 9f 05 	lds	r19, 0x059F	; 0x80059f <numar_asteptari_curente_tasta_10+0x1>
     4b4:	25 30       	cpi	r18, 0x05	; 5
     4b6:	31 05       	cpc	r19, r1
     4b8:	74 f4       	brge	.+28     	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
					if(tasta==10)
     4ba:	8a 30       	cpi	r24, 0x0A	; 10
     4bc:	39 f4       	brne	.+14     	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
					numar_asteptari_curente_tasta_10++;
     4be:	2f 5f       	subi	r18, 0xFF	; 255
     4c0:	3f 4f       	sbci	r19, 0xFF	; 255
     4c2:	30 93 9f 05 	sts	0x059F, r19	; 0x80059f <numar_asteptari_curente_tasta_10+0x1>
     4c6:	20 93 9e 05 	sts	0x059E, r18	; 0x80059e <numar_asteptari_curente_tasta_10>
     4ca:	08 95       	ret
					else
					numar_asteptari_curente_tasta_10=0;
     4cc:	10 92 9f 05 	sts	0x059F, r1	; 0x80059f <numar_asteptari_curente_tasta_10+0x1>
     4d0:	10 92 9e 05 	sts	0x059E, r1	; 0x80059e <numar_asteptari_curente_tasta_10>
     4d4:	08 95       	ret
					else
					{
						numar_asteptari_curente_tasta_10=0;
     4d6:	10 92 9f 05 	sts	0x059F, r1	; 0x80059f <numar_asteptari_curente_tasta_10+0x1>
     4da:	10 92 9e 05 	sts	0x059E, r1	; 0x80059e <numar_asteptari_curente_tasta_10>
						asteapta_tasta_10=0;
     4de:	10 92 a1 05 	sts	0x05A1, r1	; 0x8005a1 <asteapta_tasta_10+0x1>
     4e2:	10 92 a0 05 	sts	0x05A0, r1	; 0x8005a0 <asteapta_tasta_10>
     4e6:	08 95       	ret
					}
				}
				else
				{
					if(tasta=='^')
     4e8:	8e 35       	cpi	r24, 0x5E	; 94
     4ea:	99 f4       	brne	.+38     	; 0x512 <__EEPROM_REGION_LENGTH__+0x112>
						{
							asteapta_tasta_10=1;
     4ec:	81 e0       	ldi	r24, 0x01	; 1
     4ee:	90 e0       	ldi	r25, 0x00	; 0
     4f0:	90 93 a1 05 	sts	0x05A1, r25	; 0x8005a1 <asteapta_tasta_10+0x1>
     4f4:	80 93 a0 05 	sts	0x05A0, r24	; 0x8005a0 <asteapta_tasta_10>
							if(putere_motor<200)
     4f8:	80 91 9c 05 	lds	r24, 0x059C	; 0x80059c <__data_end>
     4fc:	90 91 9d 05 	lds	r25, 0x059D	; 0x80059d <__data_end+0x1>
     500:	88 3c       	cpi	r24, 0xC8	; 200
     502:	91 05       	cpc	r25, r1
     504:	2c f5       	brge	.+74     	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
								putere_motor+=10;
     506:	0a 96       	adiw	r24, 0x0a	; 10
     508:	90 93 9d 05 	sts	0x059D, r25	; 0x80059d <__data_end+0x1>
     50c:	80 93 9c 05 	sts	0x059C, r24	; 0x80059c <__data_end>
     510:	1f c0       	rjmp	.+62     	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
						}
						else if(tasta=='?')
     512:	8f 33       	cpi	r24, 0x3F	; 63
     514:	99 f4       	brne	.+38     	; 0x53c <__EEPROM_REGION_LENGTH__+0x13c>
						{
							asteapta_tasta_10=1;
     516:	81 e0       	ldi	r24, 0x01	; 1
     518:	90 e0       	ldi	r25, 0x00	; 0
     51a:	90 93 a1 05 	sts	0x05A1, r25	; 0x8005a1 <asteapta_tasta_10+0x1>
     51e:	80 93 a0 05 	sts	0x05A0, r24	; 0x8005a0 <asteapta_tasta_10>
							if(putere_motor>0)
     522:	80 91 9c 05 	lds	r24, 0x059C	; 0x80059c <__data_end>
     526:	90 91 9d 05 	lds	r25, 0x059D	; 0x80059d <__data_end+0x1>
     52a:	18 16       	cp	r1, r24
     52c:	19 06       	cpc	r1, r25
     52e:	84 f4       	brge	.+32     	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
								putere_motor-=10;
     530:	0a 97       	sbiw	r24, 0x0a	; 10
     532:	90 93 9d 05 	sts	0x059D, r25	; 0x80059d <__data_end+0x1>
     536:	80 93 9c 05 	sts	0x059C, r24	; 0x80059c <__data_end>
     53a:	0a c0       	rjmp	.+20     	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
						}
						else if(tasta=='x')
     53c:	88 37       	cpi	r24, 0x78	; 120
     53e:	41 f4       	brne	.+16     	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
						{
							asteapta_tasta_10=1;
     540:	81 e0       	ldi	r24, 0x01	; 1
     542:	90 e0       	ldi	r25, 0x00	; 0
     544:	90 93 a1 05 	sts	0x05A1, r25	; 0x8005a1 <asteapta_tasta_10+0x1>
     548:	80 93 a0 05 	sts	0x05A0, r24	; 0x8005a0 <asteapta_tasta_10>
							MMI_State_Machine=MMI_SCREEN2;
     54c:	80 93 a9 05 	sts	0x05A9, r24	; 0x8005a9 <MMI_State_Machine>
						}
						
						modificare_putere_motor(putere_motor);
     550:	80 91 9c 05 	lds	r24, 0x059C	; 0x80059c <__data_end>
     554:	90 91 9d 05 	lds	r25, 0x059D	; 0x80059d <__data_end+0x1>
     558:	0e 94 9b 05 	call	0xb36	; 0xb36 <modificare_putere_motor>
     55c:	08 95       	ret

0000055e <aplicatie_main>:

  }

  void aplicatie_main()
  {
	schimbare_continut_display();
     55e:	0e 94 02 01 	call	0x204	; 0x204 <schimbare_continut_display>
     562:	08 95       	ret

00000564 <init_basic_sfwt>:
  {
	   hal_main();
  }

 void basic_sfwt_main()
 {
     564:	8f ef       	ldi	r24, 0xFF	; 255
     566:	87 bb       	out	0x17, r24	; 23
     568:	81 bb       	out	0x11, r24	; 17
     56a:	1a ba       	out	0x1a, r1	; 26
     56c:	88 ef       	ldi	r24, 0xF8	; 248
     56e:	8b bb       	out	0x1b, r24	; 27
     570:	82 ec       	ldi	r24, 0xC2	; 194
     572:	84 bb       	out	0x14, r24	; 20
     574:	8b e0       	ldi	r24, 0x0B	; 11
     576:	83 bf       	out	0x33, r24	; 51
     578:	8a ef       	ldi	r24, 0xFA	; 250
     57a:	8c bf       	out	0x3c, r24	; 60
     57c:	8b e1       	ldi	r24, 0x1B	; 27
     57e:	8e bd       	out	0x2e, r24	; 46
     580:	82 ea       	ldi	r24, 0xA2	; 162
     582:	8f bd       	out	0x2f, r24	; 47
     584:	84 ec       	ldi	r24, 0xC4	; 196
     586:	99 e0       	ldi	r25, 0x09	; 9
     588:	97 bd       	out	0x27, r25	; 39
     58a:	86 bd       	out	0x26, r24	; 38
     58c:	8b eb       	ldi	r24, 0xBB	; 187
     58e:	90 e0       	ldi	r25, 0x00	; 0
     590:	9b bd       	out	0x2b, r25	; 43
     592:	8a bd       	out	0x2a, r24	; 42
     594:	19 bc       	out	0x29, r1	; 41
     596:	18 bc       	out	0x28, r1	; 40
     598:	8f e0       	ldi	r24, 0x0F	; 15
     59a:	85 bd       	out	0x25, r24	; 37
     59c:	8c e9       	ldi	r24, 0x9C	; 156
     59e:	83 bd       	out	0x23, r24	; 35
     5a0:	89 b7       	in	r24, 0x39	; 57
     5a2:	80 68       	ori	r24, 0x80	; 128
     5a4:	89 bf       	out	0x39, r24	; 57
     5a6:	89 b7       	in	r24, 0x39	; 57
     5a8:	82 60       	ori	r24, 0x02	; 2
     5aa:	89 bf       	out	0x39, r24	; 57
     5ac:	80 e8       	ldi	r24, 0x80	; 128
     5ae:	86 b9       	out	0x06, r24	; 6
     5b0:	86 b1       	in	r24, 0x06	; 6
     5b2:	88 66       	ori	r24, 0x68	; 104
     5b4:	86 b9       	out	0x06, r24	; 6
     5b6:	10 be       	out	0x30, r1	; 48
     5b8:	81 e0       	ldi	r24, 0x01	; 1
     5ba:	90 e0       	ldi	r25, 0x00	; 0
     5bc:	90 93 a5 05 	sts	0x05A5, r25	; 0x8005a5 <senzoractiv+0x1>
     5c0:	80 93 a4 05 	sts	0x05A4, r24	; 0x8005a4 <senzoractiv>
     5c4:	78 94       	sei
     5c6:	08 95       	ret

000005c8 <__vector_16>:
     5c8:	1f 92       	push	r1
     5ca:	0f 92       	push	r0
     5cc:	0f b6       	in	r0, 0x3f	; 63
     5ce:	0f 92       	push	r0
     5d0:	11 24       	eor	r1, r1
     5d2:	8f 93       	push	r24
     5d4:	9f 93       	push	r25
     5d6:	80 91 a4 05 	lds	r24, 0x05A4	; 0x8005a4 <senzoractiv>
     5da:	90 91 a5 05 	lds	r25, 0x05A5	; 0x8005a5 <senzoractiv+0x1>
     5de:	01 97       	sbiw	r24, 0x01	; 1
     5e0:	79 f4       	brne	.+30     	; 0x600 <__vector_16+0x38>
     5e2:	84 b1       	in	r24, 0x04	; 4
     5e4:	95 b1       	in	r25, 0x05	; 5
     5e6:	90 93 ac 05 	sts	0x05AC, r25	; 0x8005ac <senzor1+0x1>
     5ea:	80 93 ab 05 	sts	0x05AB, r24	; 0x8005ab <senzor1>
     5ee:	81 e4       	ldi	r24, 0x41	; 65
     5f0:	87 b9       	out	0x07, r24	; 7
     5f2:	36 9a       	sbi	0x06, 6	; 6
     5f4:	82 e0       	ldi	r24, 0x02	; 2
     5f6:	90 e0       	ldi	r25, 0x00	; 0
     5f8:	90 93 a5 05 	sts	0x05A5, r25	; 0x8005a5 <senzoractiv+0x1>
     5fc:	80 93 a4 05 	sts	0x05A4, r24	; 0x8005a4 <senzoractiv>
     600:	9f 91       	pop	r25
     602:	8f 91       	pop	r24
     604:	0f 90       	pop	r0
     606:	0f be       	out	0x3f, r0	; 63
     608:	0f 90       	pop	r0
     60a:	1f 90       	pop	r1
     60c:	18 95       	reti

0000060e <__vector_10>:
     60e:	1f 92       	push	r1
     610:	0f 92       	push	r0
     612:	0f b6       	in	r0, 0x3f	; 63
     614:	0f 92       	push	r0
     616:	11 24       	eor	r1, r1
     618:	2f 93       	push	r18
     61a:	3f 93       	push	r19
     61c:	4f 93       	push	r20
     61e:	5f 93       	push	r21
     620:	6f 93       	push	r22
     622:	7f 93       	push	r23
     624:	8f 93       	push	r24
     626:	9f 93       	push	r25
     628:	af 93       	push	r26
     62a:	bf 93       	push	r27
     62c:	ef 93       	push	r30
     62e:	ff 93       	push	r31
     630:	0e 94 a0 06 	call	0xd40	; 0xd40 <hal_main>
     634:	ff 91       	pop	r31
     636:	ef 91       	pop	r30
     638:	bf 91       	pop	r27
     63a:	af 91       	pop	r26
     63c:	9f 91       	pop	r25
     63e:	8f 91       	pop	r24
     640:	7f 91       	pop	r23
     642:	6f 91       	pop	r22
     644:	5f 91       	pop	r21
     646:	4f 91       	pop	r20
     648:	3f 91       	pop	r19
     64a:	2f 91       	pop	r18
     64c:	0f 90       	pop	r0
     64e:	0f be       	out	0x3f, r0	; 63
     650:	0f 90       	pop	r0
     652:	1f 90       	pop	r1
     654:	18 95       	reti

00000656 <Task_10ms>:
	
 }

 void Task_10ms()
 {
	 aplicatie_main();
     656:	0e 94 af 02 	call	0x55e	; 0x55e <aplicatie_main>
	 aflare_distanta();
     65a:	0e 94 98 05 	call	0xb30	; 0xb30 <aflare_distanta>
     65e:	08 95       	ret

00000660 <__vector_4>:




 ISR(TIMER2_COMP_vect)
 {
     660:	1f 92       	push	r1
     662:	0f 92       	push	r0
     664:	0f b6       	in	r0, 0x3f	; 63
     666:	0f 92       	push	r0
     668:	11 24       	eor	r1, r1
     66a:	2f 93       	push	r18
     66c:	3f 93       	push	r19
     66e:	4f 93       	push	r20
     670:	5f 93       	push	r21
     672:	6f 93       	push	r22
     674:	7f 93       	push	r23
     676:	8f 93       	push	r24
     678:	9f 93       	push	r25
     67a:	af 93       	push	r26
     67c:	bf 93       	push	r27
     67e:	ef 93       	push	r30
     680:	ff 93       	push	r31
	 Task_10ms();
     682:	0e 94 2b 03 	call	0x656	; 0x656 <Task_10ms>
 }
     686:	ff 91       	pop	r31
     688:	ef 91       	pop	r30
     68a:	bf 91       	pop	r27
     68c:	af 91       	pop	r26
     68e:	9f 91       	pop	r25
     690:	8f 91       	pop	r24
     692:	7f 91       	pop	r23
     694:	6f 91       	pop	r22
     696:	5f 91       	pop	r21
     698:	4f 91       	pop	r20
     69a:	3f 91       	pop	r19
     69c:	2f 91       	pop	r18
     69e:	0f 90       	pop	r0
     6a0:	0f be       	out	0x3f, r0	; 63
     6a2:	0f 90       	pop	r0
     6a4:	1f 90       	pop	r1
     6a6:	18 95       	reti

000006a8 <init_hal>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     6a8:	88 e6       	ldi	r24, 0x68	; 104
     6aa:	91 e0       	ldi	r25, 0x01	; 1
     6ac:	90 93 b0 05 	sts	0x05B0, r25	; 0x8005b0 <Display_array+0x1>
     6b0:	80 93 af 05 	sts	0x05AF, r24	; 0x8005af <Display_array>
     6b4:	08 95       	ret

000006b6 <determinare_coloana>:
     6b6:	89 b3       	in	r24, 0x19	; 25
     6b8:	88 7f       	andi	r24, 0xF8	; 248
     6ba:	80 3f       	cpi	r24, 0xF0	; 240
     6bc:	99 f0       	breq	.+38     	; 0x6e4 <determinare_coloana+0x2e>
     6be:	89 b3       	in	r24, 0x19	; 25
     6c0:	88 7f       	andi	r24, 0xF8	; 248
     6c2:	88 3e       	cpi	r24, 0xE8	; 232
     6c4:	91 f0       	breq	.+36     	; 0x6ea <determinare_coloana+0x34>
     6c6:	89 b3       	in	r24, 0x19	; 25
     6c8:	88 7f       	andi	r24, 0xF8	; 248
     6ca:	88 3d       	cpi	r24, 0xD8	; 216
     6cc:	89 f0       	breq	.+34     	; 0x6f0 <determinare_coloana+0x3a>
     6ce:	89 b3       	in	r24, 0x19	; 25
     6d0:	88 7f       	andi	r24, 0xF8	; 248
     6d2:	88 3b       	cpi	r24, 0xB8	; 184
     6d4:	81 f0       	breq	.+32     	; 0x6f6 <determinare_coloana+0x40>
     6d6:	89 b3       	in	r24, 0x19	; 25
     6d8:	88 7f       	andi	r24, 0xF8	; 248
     6da:	88 37       	cpi	r24, 0x78	; 120
     6dc:	79 f0       	breq	.+30     	; 0x6fc <determinare_coloana+0x46>
     6de:	8a e0       	ldi	r24, 0x0A	; 10
     6e0:	90 e0       	ldi	r25, 0x00	; 0
     6e2:	08 95       	ret
     6e4:	80 e0       	ldi	r24, 0x00	; 0
     6e6:	90 e0       	ldi	r25, 0x00	; 0
     6e8:	08 95       	ret
     6ea:	81 e0       	ldi	r24, 0x01	; 1
     6ec:	90 e0       	ldi	r25, 0x00	; 0
     6ee:	08 95       	ret
     6f0:	82 e0       	ldi	r24, 0x02	; 2
     6f2:	90 e0       	ldi	r25, 0x00	; 0
     6f4:	08 95       	ret
     6f6:	83 e0       	ldi	r24, 0x03	; 3
     6f8:	90 e0       	ldi	r25, 0x00	; 0
     6fa:	08 95       	ret
     6fc:	84 e0       	ldi	r24, 0x04	; 4
     6fe:	90 e0       	ldi	r25, 0x00	; 0
     700:	08 95       	ret

00000702 <verificare_tasta>:
     702:	8a e9       	ldi	r24, 0x9A	; 154
     704:	95 e0       	ldi	r25, 0x05	; 5
     706:	20 91 27 02 	lds	r18, 0x0227	; 0x800227 <verificare>
     70a:	30 91 28 02 	lds	r19, 0x0228	; 0x800228 <verificare+0x1>
     70e:	21 30       	cpi	r18, 0x01	; 1
     710:	31 05       	cpc	r19, r1
     712:	b1 f4       	brne	.+44     	; 0x740 <verificare_tasta+0x3e>
     714:	82 b3       	in	r24, 0x12	; 18
     716:	8e e0       	ldi	r24, 0x0E	; 14
     718:	82 bb       	out	0x12, r24	; 18
     71a:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <determinare_coloana>
     71e:	90 93 60 07 	sts	0x0760, r25	; 0x800760 <colo+0x1>
     722:	80 93 5f 07 	sts	0x075F, r24	; 0x80075f <colo>
     726:	8a 30       	cpi	r24, 0x0A	; 10
     728:	91 05       	cpc	r25, r1
     72a:	49 f0       	breq	.+18     	; 0x73e <verificare_tasta+0x3c>
     72c:	88 0f       	add	r24, r24
     72e:	99 1f       	adc	r25, r25
     730:	88 0f       	add	r24, r24
     732:	99 1f       	adc	r25, r25
     734:	fc 01       	movw	r30, r24
     736:	ec 59       	subi	r30, 0x9C	; 156
     738:	ff 4f       	sbci	r31, 0xFF	; 255
     73a:	83 81       	ldd	r24, Z+3	; 0x03
     73c:	01 c0       	rjmp	.+2      	; 0x740 <verificare_tasta+0x3e>
     73e:	8a e0       	ldi	r24, 0x0A	; 10
     740:	20 91 27 02 	lds	r18, 0x0227	; 0x800227 <verificare>
     744:	30 91 28 02 	lds	r19, 0x0228	; 0x800228 <verificare+0x1>
     748:	22 30       	cpi	r18, 0x02	; 2
     74a:	31 05       	cpc	r19, r1
     74c:	b1 f4       	brne	.+44     	; 0x77a <verificare_tasta+0x78>
     74e:	82 b3       	in	r24, 0x12	; 18
     750:	8d e0       	ldi	r24, 0x0D	; 13
     752:	82 bb       	out	0x12, r24	; 18
     754:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <determinare_coloana>
     758:	90 93 60 07 	sts	0x0760, r25	; 0x800760 <colo+0x1>
     75c:	80 93 5f 07 	sts	0x075F, r24	; 0x80075f <colo>
     760:	8a 30       	cpi	r24, 0x0A	; 10
     762:	91 05       	cpc	r25, r1
     764:	49 f0       	breq	.+18     	; 0x778 <verificare_tasta+0x76>
     766:	88 0f       	add	r24, r24
     768:	99 1f       	adc	r25, r25
     76a:	88 0f       	add	r24, r24
     76c:	99 1f       	adc	r25, r25
     76e:	fc 01       	movw	r30, r24
     770:	ec 59       	subi	r30, 0x9C	; 156
     772:	ff 4f       	sbci	r31, 0xFF	; 255
     774:	82 81       	ldd	r24, Z+2	; 0x02
     776:	01 c0       	rjmp	.+2      	; 0x77a <verificare_tasta+0x78>
     778:	8a e0       	ldi	r24, 0x0A	; 10
     77a:	20 91 27 02 	lds	r18, 0x0227	; 0x800227 <verificare>
     77e:	30 91 28 02 	lds	r19, 0x0228	; 0x800228 <verificare+0x1>
     782:	23 30       	cpi	r18, 0x03	; 3
     784:	31 05       	cpc	r19, r1
     786:	b1 f4       	brne	.+44     	; 0x7b4 <verificare_tasta+0xb2>
     788:	82 b3       	in	r24, 0x12	; 18
     78a:	8b e0       	ldi	r24, 0x0B	; 11
     78c:	82 bb       	out	0x12, r24	; 18
     78e:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <determinare_coloana>
     792:	90 93 60 07 	sts	0x0760, r25	; 0x800760 <colo+0x1>
     796:	80 93 5f 07 	sts	0x075F, r24	; 0x80075f <colo>
     79a:	8a 30       	cpi	r24, 0x0A	; 10
     79c:	91 05       	cpc	r25, r1
     79e:	49 f0       	breq	.+18     	; 0x7b2 <verificare_tasta+0xb0>
     7a0:	88 0f       	add	r24, r24
     7a2:	99 1f       	adc	r25, r25
     7a4:	88 0f       	add	r24, r24
     7a6:	99 1f       	adc	r25, r25
     7a8:	fc 01       	movw	r30, r24
     7aa:	ec 59       	subi	r30, 0x9C	; 156
     7ac:	ff 4f       	sbci	r31, 0xFF	; 255
     7ae:	81 81       	ldd	r24, Z+1	; 0x01
     7b0:	01 c0       	rjmp	.+2      	; 0x7b4 <verificare_tasta+0xb2>
     7b2:	8a e0       	ldi	r24, 0x0A	; 10
     7b4:	20 91 27 02 	lds	r18, 0x0227	; 0x800227 <verificare>
     7b8:	30 91 28 02 	lds	r19, 0x0228	; 0x800228 <verificare+0x1>
     7bc:	24 30       	cpi	r18, 0x04	; 4
     7be:	31 05       	cpc	r19, r1
     7c0:	d1 f4       	brne	.+52     	; 0x7f6 <verificare_tasta+0xf4>
     7c2:	82 b3       	in	r24, 0x12	; 18
     7c4:	87 e0       	ldi	r24, 0x07	; 7
     7c6:	82 bb       	out	0x12, r24	; 18
     7c8:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <determinare_coloana>
     7cc:	90 93 60 07 	sts	0x0760, r25	; 0x800760 <colo+0x1>
     7d0:	80 93 5f 07 	sts	0x075F, r24	; 0x80075f <colo>
     7d4:	8a 30       	cpi	r24, 0x0A	; 10
     7d6:	91 05       	cpc	r25, r1
     7d8:	49 f0       	breq	.+18     	; 0x7ec <verificare_tasta+0xea>
     7da:	88 0f       	add	r24, r24
     7dc:	99 1f       	adc	r25, r25
     7de:	88 0f       	add	r24, r24
     7e0:	99 1f       	adc	r25, r25
     7e2:	fc 01       	movw	r30, r24
     7e4:	ec 59       	subi	r30, 0x9C	; 156
     7e6:	ff 4f       	sbci	r31, 0xFF	; 255
     7e8:	80 81       	ld	r24, Z
     7ea:	01 c0       	rjmp	.+2      	; 0x7ee <verificare_tasta+0xec>
     7ec:	8a e0       	ldi	r24, 0x0A	; 10
     7ee:	10 92 28 02 	sts	0x0228, r1	; 0x800228 <verificare+0x1>
     7f2:	10 92 27 02 	sts	0x0227, r1	; 0x800227 <verificare>
     7f6:	20 91 27 02 	lds	r18, 0x0227	; 0x800227 <verificare>
     7fa:	30 91 28 02 	lds	r19, 0x0228	; 0x800228 <verificare+0x1>
     7fe:	2f 5f       	subi	r18, 0xFF	; 255
     800:	3f 4f       	sbci	r19, 0xFF	; 255
     802:	30 93 28 02 	sts	0x0228, r19	; 0x800228 <verificare+0x1>
     806:	20 93 27 02 	sts	0x0227, r18	; 0x800227 <verificare>
     80a:	08 95       	ret

0000080c <conversie_in_distanta>:
     80c:	4f 92       	push	r4
     80e:	5f 92       	push	r5
     810:	6f 92       	push	r6
     812:	7f 92       	push	r7
     814:	8f 92       	push	r8
     816:	9f 92       	push	r9
     818:	af 92       	push	r10
     81a:	bf 92       	push	r11
     81c:	cf 92       	push	r12
     81e:	df 92       	push	r13
     820:	ef 92       	push	r14
     822:	ff 92       	push	r15
     824:	0f 93       	push	r16
     826:	1f 93       	push	r17
     828:	cf 93       	push	r28
     82a:	df 93       	push	r29
     82c:	cd b7       	in	r28, 0x3d	; 61
     82e:	de b7       	in	r29, 0x3e	; 62
     830:	2e 97       	sbiw	r28, 0x0e	; 14
     832:	0f b6       	in	r0, 0x3f	; 63
     834:	f8 94       	cli
     836:	de bf       	out	0x3e, r29	; 62
     838:	0f be       	out	0x3f, r0	; 63
     83a:	cd bf       	out	0x3d, r28	; 61
     83c:	60 91 ab 05 	lds	r22, 0x05AB	; 0x8005ab <senzor1>
     840:	70 91 ac 05 	lds	r23, 0x05AC	; 0x8005ac <senzor1+0x1>
     844:	07 2e       	mov	r0, r23
     846:	00 0c       	add	r0, r0
     848:	88 0b       	sbc	r24, r24
     84a:	99 0b       	sbc	r25, r25
     84c:	0e 94 c6 07 	call	0xf8c	; 0xf8c <__floatsisf>
     850:	20 e0       	ldi	r18, 0x00	; 0
     852:	30 e0       	ldi	r19, 0x00	; 0
     854:	40 ea       	ldi	r20, 0xA0	; 160
     856:	50 e4       	ldi	r21, 0x40	; 64
     858:	0e 94 76 08 	call	0x10ec	; 0x10ec <__mulsf3>
     85c:	20 e0       	ldi	r18, 0x00	; 0
     85e:	30 e0       	ldi	r19, 0x00	; 0
     860:	40 e8       	ldi	r20, 0x80	; 128
     862:	5a e3       	ldi	r21, 0x3A	; 58
     864:	0e 94 76 08 	call	0x10ec	; 0x10ec <__mulsf3>
     868:	69 83       	std	Y+1, r22	; 0x01
     86a:	7a 83       	std	Y+2, r23	; 0x02
     86c:	8b 83       	std	Y+3, r24	; 0x03
     86e:	9c 83       	std	Y+4, r25	; 0x04
     870:	60 93 5b 07 	sts	0x075B, r22	; 0x80075b <voltaj1>
     874:	70 93 5c 07 	sts	0x075C, r23	; 0x80075c <voltaj1+0x1>
     878:	80 93 5d 07 	sts	0x075D, r24	; 0x80075d <voltaj1+0x2>
     87c:	90 93 5e 07 	sts	0x075E, r25	; 0x80075e <voltaj1+0x3>
     880:	60 91 ad 05 	lds	r22, 0x05AD	; 0x8005ad <senzor2>
     884:	70 91 ae 05 	lds	r23, 0x05AE	; 0x8005ae <senzor2+0x1>
     888:	07 2e       	mov	r0, r23
     88a:	00 0c       	add	r0, r0
     88c:	88 0b       	sbc	r24, r24
     88e:	99 0b       	sbc	r25, r25
     890:	0e 94 c6 07 	call	0xf8c	; 0xf8c <__floatsisf>
     894:	20 e0       	ldi	r18, 0x00	; 0
     896:	30 e0       	ldi	r19, 0x00	; 0
     898:	40 ea       	ldi	r20, 0xA0	; 160
     89a:	50 e4       	ldi	r21, 0x40	; 64
     89c:	0e 94 76 08 	call	0x10ec	; 0x10ec <__mulsf3>
     8a0:	20 e0       	ldi	r18, 0x00	; 0
     8a2:	30 e0       	ldi	r19, 0x00	; 0
     8a4:	40 e8       	ldi	r20, 0x80	; 128
     8a6:	5a e3       	ldi	r21, 0x3A	; 58
     8a8:	0e 94 76 08 	call	0x10ec	; 0x10ec <__mulsf3>
     8ac:	2b 01       	movw	r4, r22
     8ae:	3c 01       	movw	r6, r24
     8b0:	60 93 61 07 	sts	0x0761, r22	; 0x800761 <voltaj2>
     8b4:	70 93 62 07 	sts	0x0762, r23	; 0x800762 <voltaj2+0x1>
     8b8:	80 93 63 07 	sts	0x0763, r24	; 0x800763 <voltaj2+0x2>
     8bc:	90 93 64 07 	sts	0x0764, r25	; 0x800764 <voltaj2+0x3>
     8c0:	c0 90 2d 02 	lds	r12, 0x022D	; 0x80022d <voltaj+0x4>
     8c4:	d0 90 2e 02 	lds	r13, 0x022E	; 0x80022e <voltaj+0x5>
     8c8:	e0 90 2f 02 	lds	r14, 0x022F	; 0x80022f <voltaj+0x6>
     8cc:	f0 90 30 02 	lds	r15, 0x0230	; 0x800230 <voltaj+0x7>
     8d0:	a7 01       	movw	r20, r14
     8d2:	96 01       	movw	r18, r12
     8d4:	69 81       	ldd	r22, Y+1	; 0x01
     8d6:	7a 81       	ldd	r23, Y+2	; 0x02
     8d8:	8b 81       	ldd	r24, Y+3	; 0x03
     8da:	9c 81       	ldd	r25, Y+4	; 0x04
     8dc:	0e 94 17 07 	call	0xe2e	; 0xe2e <__cmpsf2>
     8e0:	88 23       	and	r24, r24
     8e2:	ec f4       	brge	.+58     	; 0x91e <__stack+0xbf>
     8e4:	01 e3       	ldi	r16, 0x31	; 49
     8e6:	12 e0       	ldi	r17, 0x02	; 2
     8e8:	21 e0       	ldi	r18, 0x01	; 1
     8ea:	30 e0       	ldi	r19, 0x00	; 0
     8ec:	3e 83       	std	Y+6, r19	; 0x06
     8ee:	2d 83       	std	Y+5, r18	; 0x05
     8f0:	4d 81       	ldd	r20, Y+5	; 0x05
     8f2:	5e 81       	ldd	r21, Y+6	; 0x06
     8f4:	4f 5f       	subi	r20, 0xFF	; 255
     8f6:	5f 4f       	sbci	r21, 0xFF	; 255
     8f8:	5e 83       	std	Y+6, r21	; 0x06
     8fa:	4d 83       	std	Y+5, r20	; 0x05
     8fc:	d8 01       	movw	r26, r16
     8fe:	8d 90       	ld	r8, X+
     900:	9d 90       	ld	r9, X+
     902:	ad 90       	ld	r10, X+
     904:	bd 90       	ld	r11, X+
     906:	8d 01       	movw	r16, r26
     908:	a5 01       	movw	r20, r10
     90a:	94 01       	movw	r18, r8
     90c:	69 81       	ldd	r22, Y+1	; 0x01
     90e:	7a 81       	ldd	r23, Y+2	; 0x02
     910:	8b 81       	ldd	r24, Y+3	; 0x03
     912:	9c 81       	ldd	r25, Y+4	; 0x04
     914:	0e 94 17 07 	call	0xe2e	; 0xe2e <__cmpsf2>
     918:	88 23       	and	r24, r24
     91a:	54 f3       	brlt	.-44     	; 0x8f0 <__stack+0x91>
     91c:	06 c0       	rjmp	.+12     	; 0x92a <__stack+0xcb>
     91e:	46 01       	movw	r8, r12
     920:	57 01       	movw	r10, r14
     922:	21 e0       	ldi	r18, 0x01	; 1
     924:	30 e0       	ldi	r19, 0x00	; 0
     926:	3e 83       	std	Y+6, r19	; 0x06
     928:	2d 83       	std	Y+5, r18	; 0x05
     92a:	8d 81       	ldd	r24, Y+5	; 0x05
     92c:	9e 81       	ldd	r25, Y+6	; 0x06
     92e:	01 97       	sbiw	r24, 0x01	; 1
     930:	4d 81       	ldd	r20, Y+5	; 0x05
     932:	5e 81       	ldd	r21, Y+6	; 0x06
     934:	44 0f       	add	r20, r20
     936:	55 1f       	adc	r21, r21
     938:	44 0f       	add	r20, r20
     93a:	55 1f       	adc	r21, r21
     93c:	47 54       	subi	r20, 0x47	; 71
     93e:	5c 4f       	sbci	r21, 0xFC	; 252
     940:	da 01       	movw	r26, r20
     942:	2d 91       	ld	r18, X+
     944:	3d 91       	ld	r19, X+
     946:	4d 91       	ld	r20, X+
     948:	5c 91       	ld	r21, X
     94a:	29 87       	std	Y+9, r18	; 0x09
     94c:	3a 87       	std	Y+10, r19	; 0x0a
     94e:	4b 87       	std	Y+11, r20	; 0x0b
     950:	5c 87       	std	Y+12, r21	; 0x0c
     952:	fc 01       	movw	r30, r24
     954:	ee 0f       	add	r30, r30
     956:	ff 1f       	adc	r31, r31
     958:	ee 0f       	add	r30, r30
     95a:	ff 1f       	adc	r31, r31
     95c:	fe 87       	std	Y+14, r31	; 0x0e
     95e:	ed 87       	std	Y+13, r30	; 0x0d
     960:	e7 54       	subi	r30, 0x47	; 71
     962:	fc 4f       	sbci	r31, 0xFC	; 252
     964:	60 81       	ld	r22, Z
     966:	71 81       	ldd	r23, Z+1	; 0x01
     968:	82 81       	ldd	r24, Z+2	; 0x02
     96a:	93 81       	ldd	r25, Z+3	; 0x03
     96c:	0e 94 aa 06 	call	0xd54	; 0xd54 <__subsf3>
     970:	6d 83       	std	Y+5, r22	; 0x05
     972:	7e 83       	std	Y+6, r23	; 0x06
     974:	8f 83       	std	Y+7, r24	; 0x07
     976:	98 87       	std	Y+8, r25	; 0x08
     978:	2d 85       	ldd	r18, Y+13	; 0x0d
     97a:	3e 85       	ldd	r19, Y+14	; 0x0e
     97c:	27 5d       	subi	r18, 0xD7	; 215
     97e:	3d 4f       	sbci	r19, 0xFD	; 253
     980:	3e 87       	std	Y+14, r19	; 0x0e
     982:	2d 87       	std	Y+13, r18	; 0x0d
     984:	a5 01       	movw	r20, r10
     986:	94 01       	movw	r18, r8
     988:	ad 85       	ldd	r26, Y+13	; 0x0d
     98a:	be 85       	ldd	r27, Y+14	; 0x0e
     98c:	6d 91       	ld	r22, X+
     98e:	7d 91       	ld	r23, X+
     990:	8d 91       	ld	r24, X+
     992:	9c 91       	ld	r25, X
     994:	0e 94 aa 06 	call	0xd54	; 0xd54 <__subsf3>
     998:	9b 01       	movw	r18, r22
     99a:	ac 01       	movw	r20, r24
     99c:	6d 81       	ldd	r22, Y+5	; 0x05
     99e:	7e 81       	ldd	r23, Y+6	; 0x06
     9a0:	8f 81       	ldd	r24, Y+7	; 0x07
     9a2:	98 85       	ldd	r25, Y+8	; 0x08
     9a4:	0e 94 1c 07 	call	0xe38	; 0xe38 <__divsf3>
     9a8:	6d 83       	std	Y+5, r22	; 0x05
     9aa:	7e 83       	std	Y+6, r23	; 0x06
     9ac:	8f 83       	std	Y+7, r24	; 0x07
     9ae:	98 87       	std	Y+8, r25	; 0x08
     9b0:	a5 01       	movw	r20, r10
     9b2:	94 01       	movw	r18, r8
     9b4:	69 81       	ldd	r22, Y+1	; 0x01
     9b6:	7a 81       	ldd	r23, Y+2	; 0x02
     9b8:	8b 81       	ldd	r24, Y+3	; 0x03
     9ba:	9c 81       	ldd	r25, Y+4	; 0x04
     9bc:	0e 94 aa 06 	call	0xd54	; 0xd54 <__subsf3>
     9c0:	9b 01       	movw	r18, r22
     9c2:	ac 01       	movw	r20, r24
     9c4:	6d 81       	ldd	r22, Y+5	; 0x05
     9c6:	7e 81       	ldd	r23, Y+6	; 0x06
     9c8:	8f 81       	ldd	r24, Y+7	; 0x07
     9ca:	98 85       	ldd	r25, Y+8	; 0x08
     9cc:	0e 94 76 08 	call	0x10ec	; 0x10ec <__mulsf3>
     9d0:	29 85       	ldd	r18, Y+9	; 0x09
     9d2:	3a 85       	ldd	r19, Y+10	; 0x0a
     9d4:	4b 85       	ldd	r20, Y+11	; 0x0b
     9d6:	5c 85       	ldd	r21, Y+12	; 0x0c
     9d8:	0e 94 ab 06 	call	0xd56	; 0xd56 <__addsf3>
     9dc:	60 93 53 07 	sts	0x0753, r22	; 0x800753 <distanta1>
     9e0:	70 93 54 07 	sts	0x0754, r23	; 0x800754 <distanta1+0x1>
     9e4:	80 93 55 07 	sts	0x0755, r24	; 0x800755 <distanta1+0x2>
     9e8:	90 93 56 07 	sts	0x0756, r25	; 0x800756 <distanta1+0x3>
     9ec:	a7 01       	movw	r20, r14
     9ee:	96 01       	movw	r18, r12
     9f0:	c3 01       	movw	r24, r6
     9f2:	b2 01       	movw	r22, r4
     9f4:	0e 94 17 07 	call	0xe2e	; 0xe2e <__cmpsf2>
     9f8:	88 23       	and	r24, r24
     9fa:	dc f4       	brge	.+54     	; 0xa32 <__stack+0x1d3>
     9fc:	01 e3       	ldi	r16, 0x31	; 49
     9fe:	12 e0       	ldi	r17, 0x02	; 2
     a00:	e1 e0       	ldi	r30, 0x01	; 1
     a02:	f0 e0       	ldi	r31, 0x00	; 0
     a04:	fa 83       	std	Y+2, r31	; 0x02
     a06:	e9 83       	std	Y+1, r30	; 0x01
     a08:	29 81       	ldd	r18, Y+1	; 0x01
     a0a:	3a 81       	ldd	r19, Y+2	; 0x02
     a0c:	2f 5f       	subi	r18, 0xFF	; 255
     a0e:	3f 4f       	sbci	r19, 0xFF	; 255
     a10:	3a 83       	std	Y+2, r19	; 0x02
     a12:	29 83       	std	Y+1, r18	; 0x01
     a14:	d8 01       	movw	r26, r16
     a16:	cd 90       	ld	r12, X+
     a18:	dd 90       	ld	r13, X+
     a1a:	ed 90       	ld	r14, X+
     a1c:	fd 90       	ld	r15, X+
     a1e:	8d 01       	movw	r16, r26
     a20:	a7 01       	movw	r20, r14
     a22:	96 01       	movw	r18, r12
     a24:	c3 01       	movw	r24, r6
     a26:	b2 01       	movw	r22, r4
     a28:	0e 94 17 07 	call	0xe2e	; 0xe2e <__cmpsf2>
     a2c:	88 23       	and	r24, r24
     a2e:	64 f3       	brlt	.-40     	; 0xa08 <__stack+0x1a9>
     a30:	04 c0       	rjmp	.+8      	; 0xa3a <__stack+0x1db>
     a32:	21 e0       	ldi	r18, 0x01	; 1
     a34:	30 e0       	ldi	r19, 0x00	; 0
     a36:	3a 83       	std	Y+2, r19	; 0x02
     a38:	29 83       	std	Y+1, r18	; 0x01
     a3a:	89 81       	ldd	r24, Y+1	; 0x01
     a3c:	9a 81       	ldd	r25, Y+2	; 0x02
     a3e:	01 97       	sbiw	r24, 0x01	; 1
     a40:	49 81       	ldd	r20, Y+1	; 0x01
     a42:	5a 81       	ldd	r21, Y+2	; 0x02
     a44:	44 0f       	add	r20, r20
     a46:	55 1f       	adc	r21, r21
     a48:	44 0f       	add	r20, r20
     a4a:	55 1f       	adc	r21, r21
     a4c:	47 54       	subi	r20, 0x47	; 71
     a4e:	5c 4f       	sbci	r21, 0xFC	; 252
     a50:	da 01       	movw	r26, r20
     a52:	8d 90       	ld	r8, X+
     a54:	9d 90       	ld	r9, X+
     a56:	ad 90       	ld	r10, X+
     a58:	bc 90       	ld	r11, X
     a5a:	fc 01       	movw	r30, r24
     a5c:	ee 0f       	add	r30, r30
     a5e:	ff 1f       	adc	r31, r31
     a60:	ee 0f       	add	r30, r30
     a62:	ff 1f       	adc	r31, r31
     a64:	fe 83       	std	Y+6, r31	; 0x06
     a66:	ed 83       	std	Y+5, r30	; 0x05
     a68:	e7 54       	subi	r30, 0x47	; 71
     a6a:	fc 4f       	sbci	r31, 0xFC	; 252
     a6c:	a5 01       	movw	r20, r10
     a6e:	94 01       	movw	r18, r8
     a70:	60 81       	ld	r22, Z
     a72:	71 81       	ldd	r23, Z+1	; 0x01
     a74:	82 81       	ldd	r24, Z+2	; 0x02
     a76:	93 81       	ldd	r25, Z+3	; 0x03
     a78:	0e 94 aa 06 	call	0xd54	; 0xd54 <__subsf3>
     a7c:	69 83       	std	Y+1, r22	; 0x01
     a7e:	7a 83       	std	Y+2, r23	; 0x02
     a80:	8b 83       	std	Y+3, r24	; 0x03
     a82:	9c 83       	std	Y+4, r25	; 0x04
     a84:	2d 81       	ldd	r18, Y+5	; 0x05
     a86:	3e 81       	ldd	r19, Y+6	; 0x06
     a88:	27 5d       	subi	r18, 0xD7	; 215
     a8a:	3d 4f       	sbci	r19, 0xFD	; 253
     a8c:	3e 83       	std	Y+6, r19	; 0x06
     a8e:	2d 83       	std	Y+5, r18	; 0x05
     a90:	a7 01       	movw	r20, r14
     a92:	96 01       	movw	r18, r12
     a94:	ad 81       	ldd	r26, Y+5	; 0x05
     a96:	be 81       	ldd	r27, Y+6	; 0x06
     a98:	6d 91       	ld	r22, X+
     a9a:	7d 91       	ld	r23, X+
     a9c:	8d 91       	ld	r24, X+
     a9e:	9c 91       	ld	r25, X
     aa0:	0e 94 aa 06 	call	0xd54	; 0xd54 <__subsf3>
     aa4:	9b 01       	movw	r18, r22
     aa6:	ac 01       	movw	r20, r24
     aa8:	69 81       	ldd	r22, Y+1	; 0x01
     aaa:	7a 81       	ldd	r23, Y+2	; 0x02
     aac:	8b 81       	ldd	r24, Y+3	; 0x03
     aae:	9c 81       	ldd	r25, Y+4	; 0x04
     ab0:	0e 94 1c 07 	call	0xe38	; 0xe38 <__divsf3>
     ab4:	69 83       	std	Y+1, r22	; 0x01
     ab6:	7a 83       	std	Y+2, r23	; 0x02
     ab8:	8b 83       	std	Y+3, r24	; 0x03
     aba:	9c 83       	std	Y+4, r25	; 0x04
     abc:	a7 01       	movw	r20, r14
     abe:	96 01       	movw	r18, r12
     ac0:	c3 01       	movw	r24, r6
     ac2:	b2 01       	movw	r22, r4
     ac4:	0e 94 aa 06 	call	0xd54	; 0xd54 <__subsf3>
     ac8:	9b 01       	movw	r18, r22
     aca:	ac 01       	movw	r20, r24
     acc:	69 81       	ldd	r22, Y+1	; 0x01
     ace:	7a 81       	ldd	r23, Y+2	; 0x02
     ad0:	8b 81       	ldd	r24, Y+3	; 0x03
     ad2:	9c 81       	ldd	r25, Y+4	; 0x04
     ad4:	0e 94 76 08 	call	0x10ec	; 0x10ec <__mulsf3>
     ad8:	a5 01       	movw	r20, r10
     ada:	94 01       	movw	r18, r8
     adc:	0e 94 ab 06 	call	0xd56	; 0xd56 <__addsf3>
     ae0:	60 93 4f 07 	sts	0x074F, r22	; 0x80074f <distanta2>
     ae4:	70 93 50 07 	sts	0x0750, r23	; 0x800750 <distanta2+0x1>
     ae8:	80 93 51 07 	sts	0x0751, r24	; 0x800751 <distanta2+0x2>
     aec:	90 93 52 07 	sts	0x0752, r25	; 0x800752 <distanta2+0x3>
     af0:	80 91 a7 05 	lds	r24, 0x05A7	; 0x8005a7 <iteratie>
     af4:	90 91 a8 05 	lds	r25, 0x05A8	; 0x8005a8 <iteratie+0x1>
     af8:	01 96       	adiw	r24, 0x01	; 1
     afa:	90 93 a8 05 	sts	0x05A8, r25	; 0x8005a8 <iteratie+0x1>
     afe:	80 93 a7 05 	sts	0x05A7, r24	; 0x8005a7 <iteratie>
     b02:	2e 96       	adiw	r28, 0x0e	; 14
     b04:	0f b6       	in	r0, 0x3f	; 63
     b06:	f8 94       	cli
     b08:	de bf       	out	0x3e, r29	; 62
     b0a:	0f be       	out	0x3f, r0	; 63
     b0c:	cd bf       	out	0x3d, r28	; 61
     b0e:	df 91       	pop	r29
     b10:	cf 91       	pop	r28
     b12:	1f 91       	pop	r17
     b14:	0f 91       	pop	r16
     b16:	ff 90       	pop	r15
     b18:	ef 90       	pop	r14
     b1a:	df 90       	pop	r13
     b1c:	cf 90       	pop	r12
     b1e:	bf 90       	pop	r11
     b20:	af 90       	pop	r10
     b22:	9f 90       	pop	r9
     b24:	8f 90       	pop	r8
     b26:	7f 90       	pop	r7
     b28:	6f 90       	pop	r6
     b2a:	5f 90       	pop	r5
     b2c:	4f 90       	pop	r4
     b2e:	08 95       	ret

00000b30 <aflare_distanta>:
     b30:	0e 94 06 04 	call	0x80c	; 0x80c <conversie_in_distanta>
     b34:	08 95       	ret

00000b36 <modificare_putere_motor>:
     b36:	9c 01       	movw	r18, r24
     b38:	22 0f       	add	r18, r18
     b3a:	33 1f       	adc	r19, r19
     b3c:	82 0f       	add	r24, r18
     b3e:	93 1f       	adc	r25, r19
     b40:	88 0f       	add	r24, r24
     b42:	99 1f       	adc	r25, r25
     b44:	88 0f       	add	r24, r24
     b46:	99 1f       	adc	r25, r25
     b48:	99 bd       	out	0x29, r25	; 41
     b4a:	88 bd       	out	0x28, r24	; 40
     b4c:	08 95       	ret

00000b4e <afisare_distanta>:
	  _delay_us(10);
	  send_a_command(0x0C); //display on cursor on
	  _delay_us(10);
  }
  void afisare_distanta()
  {
     b4e:	0f 93       	push	r16
     b50:	1f 93       	push	r17
     b52:	cf 93       	push	r28
     b54:	df 93       	push	r29
     b56:	e1 eb       	ldi	r30, 0xB1	; 177
     b58:	f5 e0       	ldi	r31, 0x05	; 5
     b5a:	00 91 af 05 	lds	r16, 0x05AF	; 0x8005af <Display_array>
     b5e:	10 91 b0 05 	lds	r17, 0x05B0	; 0x8005b0 <Display_array+0x1>
     b62:	21 ef       	ldi	r18, 0xF1	; 241
     b64:	36 e0       	ldi	r19, 0x06	; 6
	  int i;

		for (i = 0; i < DISPLAY_MEMORY_SIZE ; i++)
		{
			STEP3_LCD[2*i].Port_Data = Display_array[i];
     b66:	c8 01       	movw	r24, r16
     b68:	df 01       	movw	r26, r30
			STEP3_LCD[2*i].Port_Control = 0x8F & (0x00 + PIN_RS + PIN_E);
     b6a:	66 e0       	ldi	r22, 0x06	; 6
			STEP3_LCD[2*i + 1].Port_Data = Display_array[i];
			STEP3_LCD[2*i + 1].Port_Control = 0x8F & (0x00 + PIN_RS);
     b6c:	52 e0       	ldi	r21, 0x02	; 2
  {
	  int i;

		for (i = 0; i < DISPLAY_MEMORY_SIZE ; i++)
		{
			STEP3_LCD[2*i].Port_Data = Display_array[i];
     b6e:	ec 01       	movw	r28, r24
     b70:	48 81       	ld	r20, Y
     b72:	4c 93       	st	X, r20
			STEP3_LCD[2*i].Port_Control = 0x8F & (0x00 + PIN_RS + PIN_E);
     b74:	11 96       	adiw	r26, 0x01	; 1
     b76:	6c 93       	st	X, r22
     b78:	11 97       	sbiw	r26, 0x01	; 1
			STEP3_LCD[2*i + 1].Port_Data = Display_array[i];
     b7a:	49 91       	ld	r20, Y+
     b7c:	ce 01       	movw	r24, r28
     b7e:	12 96       	adiw	r26, 0x02	; 2
     b80:	4c 93       	st	X, r20
     b82:	12 97       	sbiw	r26, 0x02	; 2
			STEP3_LCD[2*i + 1].Port_Control = 0x8F & (0x00 + PIN_RS);
     b84:	13 96       	adiw	r26, 0x03	; 3
     b86:	5c 93       	st	X, r21
     b88:	13 97       	sbiw	r26, 0x03	; 3
     b8a:	14 96       	adiw	r26, 0x04	; 4
  }
  void afisare_distanta()
  {
	  int i;

		for (i = 0; i < DISPLAY_MEMORY_SIZE ; i++)
     b8c:	a2 17       	cp	r26, r18
     b8e:	b3 07       	cpc	r27, r19
     b90:	71 f7       	brne	.-36     	; 0xb6e <afisare_distanta+0x20>
	  
	 /* Update the display array */
	  for (i = 0; i < DISPLAY_MEMORY_SIZE ; i++)
	  {
		  STEP3_LCD[2*i].Port_Data = Display_array[i];
		  STEP3_LCD[2*i].Port_Control =  (0x00 + RS + E);
     b92:	42 e8       	ldi	r20, 0x82	; 130
		  STEP3_LCD[2*i + 1].Port_Data = Display_array[i];
		  STEP3_LCD[2*i + 1].Port_Control =  (0x00 + RS);
     b94:	92 e0       	ldi	r25, 0x02	; 2
	  
	  
	 /* Update the display array */
	  for (i = 0; i < DISPLAY_MEMORY_SIZE ; i++)
	  {
		  STEP3_LCD[2*i].Port_Data = Display_array[i];
     b96:	d8 01       	movw	r26, r16
     b98:	8c 91       	ld	r24, X
     b9a:	80 83       	st	Z, r24
		  STEP3_LCD[2*i].Port_Control =  (0x00 + RS + E);
     b9c:	41 83       	std	Z+1, r20	; 0x01
		  STEP3_LCD[2*i + 1].Port_Data = Display_array[i];
     b9e:	e8 01       	movw	r28, r16
     ba0:	89 91       	ld	r24, Y+
     ba2:	8e 01       	movw	r16, r28
     ba4:	82 83       	std	Z+2, r24	; 0x02
		  STEP3_LCD[2*i + 1].Port_Control =  (0x00 + RS);
     ba6:	93 83       	std	Z+3, r25	; 0x03
     ba8:	34 96       	adiw	r30, 0x04	; 4
			STEP3_LCD[2*i + 1].Port_Control = 0x8F & (0x00 + PIN_RS);
	   }
	  
	  
	 /* Update the display array */
	  for (i = 0; i < DISPLAY_MEMORY_SIZE ; i++)
     baa:	e2 17       	cp	r30, r18
     bac:	f3 07       	cpc	r31, r19
     bae:	99 f7       	brne	.-26     	; 0xb96 <afisare_distanta+0x48>
		  STEP3_LCD[2*i].Port_Control =  (0x00 + RS + E);
		  STEP3_LCD[2*i + 1].Port_Data = Display_array[i];
		  STEP3_LCD[2*i + 1].Port_Control =  (0x00 + RS);
	  }

	  switch(HD44780_MainState)
     bb0:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <HD44780_MainState>
     bb4:	83 30       	cpi	r24, 0x03	; 3
     bb6:	09 f4       	brne	.+2      	; 0xbba <afisare_distanta+0x6c>
     bb8:	44 c0       	rjmp	.+136    	; 0xc42 <afisare_distanta+0xf4>
     bba:	28 f4       	brcc	.+10     	; 0xbc6 <afisare_distanta+0x78>
     bbc:	81 30       	cpi	r24, 0x01	; 1
     bbe:	61 f0       	breq	.+24     	; 0xbd8 <afisare_distanta+0x8a>
     bc0:	82 30       	cpi	r24, 0x02	; 2
     bc2:	a1 f1       	breq	.+104    	; 0xc2c <afisare_distanta+0xde>
     bc4:	a7 c0       	rjmp	.+334    	; 0xd14 <afisare_distanta+0x1c6>
     bc6:	85 30       	cpi	r24, 0x05	; 5
     bc8:	09 f4       	brne	.+2      	; 0xbcc <afisare_distanta+0x7e>
     bca:	70 c0       	rjmp	.+224    	; 0xcac <afisare_distanta+0x15e>
     bcc:	08 f4       	brcc	.+2      	; 0xbd0 <afisare_distanta+0x82>
     bce:	63 c0       	rjmp	.+198    	; 0xc96 <afisare_distanta+0x148>
     bd0:	86 30       	cpi	r24, 0x06	; 6
     bd2:	09 f4       	brne	.+2      	; 0xbd6 <afisare_distanta+0x88>
     bd4:	95 c0       	rjmp	.+298    	; 0xd00 <afisare_distanta+0x1b2>
     bd6:	9e c0       	rjmp	.+316    	; 0xd14 <afisare_distanta+0x1c6>
	  {
		  case HD44780U_STEP1:
		  WRITE_PORT_STEP1();
     bd8:	e0 91 a6 05 	lds	r30, 0x05A6	; 0x8005a6 <Internal_Step>
     bdc:	f0 e0       	ldi	r31, 0x00	; 0
     bde:	ee 0f       	add	r30, r30
     be0:	ff 1f       	adc	r31, r31
     be2:	ec 5e       	subi	r30, 0xEC	; 236
     be4:	fd 4f       	sbci	r31, 0xFD	; 253
     be6:	80 81       	ld	r24, Z
     be8:	88 bb       	out	0x18, r24	; 24
     bea:	85 b3       	in	r24, 0x15	; 21
     bec:	e0 91 a6 05 	lds	r30, 0x05A6	; 0x8005a6 <Internal_Step>
     bf0:	f0 e0       	ldi	r31, 0x00	; 0
     bf2:	ee 0f       	add	r30, r30
     bf4:	ff 1f       	adc	r31, r31
     bf6:	ec 5e       	subi	r30, 0xEC	; 236
     bf8:	fd 4f       	sbci	r31, 0xFD	; 253
     bfa:	91 81       	ldd	r25, Z+1	; 0x01
     bfc:	92 7c       	andi	r25, 0xC2	; 194
     bfe:	8d 73       	andi	r24, 0x3D	; 61
     c00:	89 2b       	or	r24, r25
     c02:	85 bb       	out	0x15, r24	; 21
		  if (Internal_Step >= (sizeof(STEP1_LCD) / 2))
     c04:	80 91 a6 05 	lds	r24, 0x05A6	; 0x8005a6 <Internal_Step>
     c08:	89 30       	cpi	r24, 0x09	; 9
     c0a:	60 f0       	brcs	.+24     	; 0xc24 <afisare_distanta+0xd6>
		  {
			  HD44780_MainState = HD44780U_DELAY1;
     c0c:	82 e0       	ldi	r24, 0x02	; 2
     c0e:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <HD44780_MainState>
			  delay_counter = 50;
     c12:	82 e3       	ldi	r24, 0x32	; 50
     c14:	90 e0       	ldi	r25, 0x00	; 0
     c16:	90 93 f6 06 	sts	0x06F6, r25	; 0x8006f6 <delay_counter+0x1>
     c1a:	80 93 f5 06 	sts	0x06F5, r24	; 0x8006f5 <delay_counter>
			  Internal_Step = 0;
     c1e:	10 92 a6 05 	sts	0x05A6, r1	; 0x8005a6 <Internal_Step>
     c22:	84 c0       	rjmp	.+264    	; 0xd2c <afisare_distanta+0x1de>
		  }
		  else
		  {
			  Internal_Step++;
     c24:	8f 5f       	subi	r24, 0xFF	; 255
     c26:	80 93 a6 05 	sts	0x05A6, r24	; 0x8005a6 <Internal_Step>
     c2a:	74 c0       	rjmp	.+232    	; 0xd14 <afisare_distanta+0x1c6>
		  }
		  break;
		  case HD44780U_DELAY1:
		  if (delay_counter == 0)
     c2c:	80 91 f5 06 	lds	r24, 0x06F5	; 0x8006f5 <delay_counter>
     c30:	90 91 f6 06 	lds	r25, 0x06F6	; 0x8006f6 <delay_counter+0x1>
     c34:	89 2b       	or	r24, r25
     c36:	09 f0       	breq	.+2      	; 0xc3a <afisare_distanta+0xec>
     c38:	79 c0       	rjmp	.+242    	; 0xd2c <afisare_distanta+0x1de>
		  {
			  HD44780_MainState = HD44780U_STEP2;
     c3a:	83 e0       	ldi	r24, 0x03	; 3
     c3c:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <HD44780_MainState>
     c40:	7a c0       	rjmp	.+244    	; 0xd36 <afisare_distanta+0x1e8>
		  }
		  break;
		  case HD44780U_STEP2:
		  WRITE_PORT_STEP2();
     c42:	e0 91 a6 05 	lds	r30, 0x05A6	; 0x8005a6 <Internal_Step>
     c46:	f0 e0       	ldi	r31, 0x00	; 0
     c48:	ee 0f       	add	r30, r30
     c4a:	ff 1f       	adc	r31, r31
     c4c:	e8 5f       	subi	r30, 0xF8	; 248
     c4e:	fd 4f       	sbci	r31, 0xFD	; 253
     c50:	80 81       	ld	r24, Z
     c52:	88 bb       	out	0x18, r24	; 24
     c54:	85 b3       	in	r24, 0x15	; 21
     c56:	e0 91 a6 05 	lds	r30, 0x05A6	; 0x8005a6 <Internal_Step>
     c5a:	f0 e0       	ldi	r31, 0x00	; 0
     c5c:	ee 0f       	add	r30, r30
     c5e:	ff 1f       	adc	r31, r31
     c60:	e8 5f       	subi	r30, 0xF8	; 248
     c62:	fd 4f       	sbci	r31, 0xFD	; 253
     c64:	91 81       	ldd	r25, Z+1	; 0x01
     c66:	92 7c       	andi	r25, 0xC2	; 194
     c68:	8d 73       	andi	r24, 0x3D	; 61
     c6a:	89 2b       	or	r24, r25
     c6c:	85 bb       	out	0x15, r24	; 21
		  if (Internal_Step >= (sizeof(STEP2_LCD) / 2))
     c6e:	80 91 a6 05 	lds	r24, 0x05A6	; 0x8005a6 <Internal_Step>
     c72:	86 30       	cpi	r24, 0x06	; 6
     c74:	60 f0       	brcs	.+24     	; 0xc8e <afisare_distanta+0x140>
		  {
			  HD44780_MainState = HD44780U_DELAY2;
     c76:	84 e0       	ldi	r24, 0x04	; 4
     c78:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <HD44780_MainState>
			  delay_counter = 50;
     c7c:	82 e3       	ldi	r24, 0x32	; 50
     c7e:	90 e0       	ldi	r25, 0x00	; 0
     c80:	90 93 f6 06 	sts	0x06F6, r25	; 0x8006f6 <delay_counter+0x1>
     c84:	80 93 f5 06 	sts	0x06F5, r24	; 0x8006f5 <delay_counter>
			  Internal_Step = 0;
     c88:	10 92 a6 05 	sts	0x05A6, r1	; 0x8005a6 <Internal_Step>
     c8c:	4f c0       	rjmp	.+158    	; 0xd2c <afisare_distanta+0x1de>
		  }
		  else
		  {
			  Internal_Step++;
     c8e:	8f 5f       	subi	r24, 0xFF	; 255
     c90:	80 93 a6 05 	sts	0x05A6, r24	; 0x8005a6 <Internal_Step>
     c94:	3f c0       	rjmp	.+126    	; 0xd14 <afisare_distanta+0x1c6>
		  }
		  break;
		  case HD44780U_DELAY2:
		  if (delay_counter == 0)
     c96:	80 91 f5 06 	lds	r24, 0x06F5	; 0x8006f5 <delay_counter>
     c9a:	90 91 f6 06 	lds	r25, 0x06F6	; 0x8006f6 <delay_counter+0x1>
     c9e:	89 2b       	or	r24, r25
     ca0:	09 f0       	breq	.+2      	; 0xca4 <afisare_distanta+0x156>
     ca2:	44 c0       	rjmp	.+136    	; 0xd2c <afisare_distanta+0x1de>
		  {
			  HD44780_MainState = HD44780U_STEP3;
     ca4:	85 e0       	ldi	r24, 0x05	; 5
     ca6:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <HD44780_MainState>
     caa:	45 c0       	rjmp	.+138    	; 0xd36 <afisare_distanta+0x1e8>
		  }
		  break;
		  case HD44780U_STEP3:
		  WRITE_PORT_STEP3();
     cac:	e0 91 a6 05 	lds	r30, 0x05A6	; 0x8005a6 <Internal_Step>
     cb0:	f0 e0       	ldi	r31, 0x00	; 0
     cb2:	ee 0f       	add	r30, r30
     cb4:	ff 1f       	adc	r31, r31
     cb6:	ef 54       	subi	r30, 0x4F	; 79
     cb8:	fa 4f       	sbci	r31, 0xFA	; 250
     cba:	80 81       	ld	r24, Z
     cbc:	88 bb       	out	0x18, r24	; 24
     cbe:	85 b3       	in	r24, 0x15	; 21
     cc0:	e0 91 a6 05 	lds	r30, 0x05A6	; 0x8005a6 <Internal_Step>
     cc4:	f0 e0       	ldi	r31, 0x00	; 0
     cc6:	ee 0f       	add	r30, r30
     cc8:	ff 1f       	adc	r31, r31
     cca:	ef 54       	subi	r30, 0x4F	; 79
     ccc:	fa 4f       	sbci	r31, 0xFA	; 250
     cce:	91 81       	ldd	r25, Z+1	; 0x01
     cd0:	92 7c       	andi	r25, 0xC2	; 194
     cd2:	8d 73       	andi	r24, 0x3D	; 61
     cd4:	89 2b       	or	r24, r25
     cd6:	85 bb       	out	0x15, r24	; 21

		  if (Internal_Step >= (sizeof(STEP3_LCD) / 2))
     cd8:	80 91 a6 05 	lds	r24, 0x05A6	; 0x8005a6 <Internal_Step>
     cdc:	80 3a       	cpi	r24, 0xA0	; 160
     cde:	60 f0       	brcs	.+24     	; 0xcf8 <afisare_distanta+0x1aa>
		  {
			  HD44780_MainState = HD44780U_DELAY3;
     ce0:	86 e0       	ldi	r24, 0x06	; 6
     ce2:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <HD44780_MainState>
			  delay_counter = 100;
     ce6:	84 e6       	ldi	r24, 0x64	; 100
     ce8:	90 e0       	ldi	r25, 0x00	; 0
     cea:	90 93 f6 06 	sts	0x06F6, r25	; 0x8006f6 <delay_counter+0x1>
     cee:	80 93 f5 06 	sts	0x06F5, r24	; 0x8006f5 <delay_counter>
			  Internal_Step = 0;
     cf2:	10 92 a6 05 	sts	0x05A6, r1	; 0x8005a6 <Internal_Step>
     cf6:	1a c0       	rjmp	.+52     	; 0xd2c <afisare_distanta+0x1de>
		  }
		  else
		  {
			  Internal_Step++;
     cf8:	8f 5f       	subi	r24, 0xFF	; 255
     cfa:	80 93 a6 05 	sts	0x05A6, r24	; 0x8005a6 <Internal_Step>
     cfe:	0a c0       	rjmp	.+20     	; 0xd14 <afisare_distanta+0x1c6>
		  }
		  break;
		  case HD44780U_DELAY3:
		  if (delay_counter == 0)
     d00:	80 91 f5 06 	lds	r24, 0x06F5	; 0x8006f5 <delay_counter>
     d04:	90 91 f6 06 	lds	r25, 0x06F6	; 0x8006f6 <delay_counter+0x1>
     d08:	89 2b       	or	r24, r25
     d0a:	81 f4       	brne	.+32     	; 0xd2c <afisare_distanta+0x1de>
		  {
			  HD44780_MainState = HD44780U_STEP3;
     d0c:	85 e0       	ldi	r24, 0x05	; 5
     d0e:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <HD44780_MainState>
     d12:	11 c0       	rjmp	.+34     	; 0xd36 <afisare_distanta+0x1e8>
		  case HDD4478U_IDLE:
		  break;

	  }

	  if (delay_counter > 0)
     d14:	80 91 f5 06 	lds	r24, 0x06F5	; 0x8006f5 <delay_counter>
     d18:	90 91 f6 06 	lds	r25, 0x06F6	; 0x8006f6 <delay_counter+0x1>
     d1c:	00 97       	sbiw	r24, 0x00	; 0
     d1e:	59 f0       	breq	.+22     	; 0xd36 <afisare_distanta+0x1e8>
	  {
		  delay_counter --;
     d20:	01 97       	sbiw	r24, 0x01	; 1
     d22:	90 93 f6 06 	sts	0x06F6, r25	; 0x8006f6 <delay_counter+0x1>
     d26:	80 93 f5 06 	sts	0x06F5, r24	; 0x8006f5 <delay_counter>
	  }

     d2a:	05 c0       	rjmp	.+10     	; 0xd36 <afisare_distanta+0x1e8>
		  case HDD4478U_IDLE:
		  break;

	  }

	  if (delay_counter > 0)
     d2c:	80 91 f5 06 	lds	r24, 0x06F5	; 0x8006f5 <delay_counter>
     d30:	90 91 f6 06 	lds	r25, 0x06F6	; 0x8006f6 <delay_counter+0x1>
     d34:	f5 cf       	rjmp	.-22     	; 0xd20 <afisare_distanta+0x1d2>
	  {
		  delay_counter --;
	  }

     d36:	df 91       	pop	r29
     d38:	cf 91       	pop	r28
     d3a:	1f 91       	pop	r17
     d3c:	0f 91       	pop	r16
     d3e:	08 95       	ret

00000d40 <hal_main>:
};


 void hal_main()
  {
	  afisare_distanta();
     d40:	0e 94 a7 05 	call	0xb4e	; 0xb4e <afisare_distanta>
     d44:	08 95       	ret

00000d46 <main>:
#include "HAL/HAL_lyb.h"
#include "Aplicatie/Aplicatie_lyb.h"

int main(void)
{
    init_basic_sfwt();
     d46:	0e 94 b2 02 	call	0x564	; 0x564 <init_basic_sfwt>
	init_hal();
     d4a:	0e 94 54 03 	call	0x6a8	; 0x6a8 <init_hal>
	init_aplicatie();
     d4e:	0e 94 49 00 	call	0x92	; 0x92 <init_aplicatie>
     d52:	ff cf       	rjmp	.-2      	; 0xd52 <main+0xc>

00000d54 <__subsf3>:
     d54:	50 58       	subi	r21, 0x80	; 128

00000d56 <__addsf3>:
     d56:	bb 27       	eor	r27, r27
     d58:	aa 27       	eor	r26, r26
     d5a:	0e 94 c2 06 	call	0xd84	; 0xd84 <__addsf3x>
     d5e:	0c 94 3c 08 	jmp	0x1078	; 0x1078 <__fp_round>
     d62:	0e 94 2e 08 	call	0x105c	; 0x105c <__fp_pscA>
     d66:	38 f0       	brcs	.+14     	; 0xd76 <__addsf3+0x20>
     d68:	0e 94 35 08 	call	0x106a	; 0x106a <__fp_pscB>
     d6c:	20 f0       	brcs	.+8      	; 0xd76 <__addsf3+0x20>
     d6e:	39 f4       	brne	.+14     	; 0xd7e <__addsf3+0x28>
     d70:	9f 3f       	cpi	r25, 0xFF	; 255
     d72:	19 f4       	brne	.+6      	; 0xd7a <__addsf3+0x24>
     d74:	26 f4       	brtc	.+8      	; 0xd7e <__addsf3+0x28>
     d76:	0c 94 2b 08 	jmp	0x1056	; 0x1056 <__fp_nan>
     d7a:	0e f4       	brtc	.+2      	; 0xd7e <__addsf3+0x28>
     d7c:	e0 95       	com	r30
     d7e:	e7 fb       	bst	r30, 7
     d80:	0c 94 25 08 	jmp	0x104a	; 0x104a <__fp_inf>

00000d84 <__addsf3x>:
     d84:	e9 2f       	mov	r30, r25
     d86:	0e 94 4d 08 	call	0x109a	; 0x109a <__fp_split3>
     d8a:	58 f3       	brcs	.-42     	; 0xd62 <__addsf3+0xc>
     d8c:	ba 17       	cp	r27, r26
     d8e:	62 07       	cpc	r22, r18
     d90:	73 07       	cpc	r23, r19
     d92:	84 07       	cpc	r24, r20
     d94:	95 07       	cpc	r25, r21
     d96:	20 f0       	brcs	.+8      	; 0xda0 <__addsf3x+0x1c>
     d98:	79 f4       	brne	.+30     	; 0xdb8 <__addsf3x+0x34>
     d9a:	a6 f5       	brtc	.+104    	; 0xe04 <__addsf3x+0x80>
     d9c:	0c 94 6f 08 	jmp	0x10de	; 0x10de <__fp_zero>
     da0:	0e f4       	brtc	.+2      	; 0xda4 <__addsf3x+0x20>
     da2:	e0 95       	com	r30
     da4:	0b 2e       	mov	r0, r27
     da6:	ba 2f       	mov	r27, r26
     da8:	a0 2d       	mov	r26, r0
     daa:	0b 01       	movw	r0, r22
     dac:	b9 01       	movw	r22, r18
     dae:	90 01       	movw	r18, r0
     db0:	0c 01       	movw	r0, r24
     db2:	ca 01       	movw	r24, r20
     db4:	a0 01       	movw	r20, r0
     db6:	11 24       	eor	r1, r1
     db8:	ff 27       	eor	r31, r31
     dba:	59 1b       	sub	r21, r25
     dbc:	99 f0       	breq	.+38     	; 0xde4 <__addsf3x+0x60>
     dbe:	59 3f       	cpi	r21, 0xF9	; 249
     dc0:	50 f4       	brcc	.+20     	; 0xdd6 <__addsf3x+0x52>
     dc2:	50 3e       	cpi	r21, 0xE0	; 224
     dc4:	68 f1       	brcs	.+90     	; 0xe20 <__addsf3x+0x9c>
     dc6:	1a 16       	cp	r1, r26
     dc8:	f0 40       	sbci	r31, 0x00	; 0
     dca:	a2 2f       	mov	r26, r18
     dcc:	23 2f       	mov	r18, r19
     dce:	34 2f       	mov	r19, r20
     dd0:	44 27       	eor	r20, r20
     dd2:	58 5f       	subi	r21, 0xF8	; 248
     dd4:	f3 cf       	rjmp	.-26     	; 0xdbc <__addsf3x+0x38>
     dd6:	46 95       	lsr	r20
     dd8:	37 95       	ror	r19
     dda:	27 95       	ror	r18
     ddc:	a7 95       	ror	r26
     dde:	f0 40       	sbci	r31, 0x00	; 0
     de0:	53 95       	inc	r21
     de2:	c9 f7       	brne	.-14     	; 0xdd6 <__addsf3x+0x52>
     de4:	7e f4       	brtc	.+30     	; 0xe04 <__addsf3x+0x80>
     de6:	1f 16       	cp	r1, r31
     de8:	ba 0b       	sbc	r27, r26
     dea:	62 0b       	sbc	r22, r18
     dec:	73 0b       	sbc	r23, r19
     dee:	84 0b       	sbc	r24, r20
     df0:	ba f0       	brmi	.+46     	; 0xe20 <__addsf3x+0x9c>
     df2:	91 50       	subi	r25, 0x01	; 1
     df4:	a1 f0       	breq	.+40     	; 0xe1e <__addsf3x+0x9a>
     df6:	ff 0f       	add	r31, r31
     df8:	bb 1f       	adc	r27, r27
     dfa:	66 1f       	adc	r22, r22
     dfc:	77 1f       	adc	r23, r23
     dfe:	88 1f       	adc	r24, r24
     e00:	c2 f7       	brpl	.-16     	; 0xdf2 <__addsf3x+0x6e>
     e02:	0e c0       	rjmp	.+28     	; 0xe20 <__addsf3x+0x9c>
     e04:	ba 0f       	add	r27, r26
     e06:	62 1f       	adc	r22, r18
     e08:	73 1f       	adc	r23, r19
     e0a:	84 1f       	adc	r24, r20
     e0c:	48 f4       	brcc	.+18     	; 0xe20 <__addsf3x+0x9c>
     e0e:	87 95       	ror	r24
     e10:	77 95       	ror	r23
     e12:	67 95       	ror	r22
     e14:	b7 95       	ror	r27
     e16:	f7 95       	ror	r31
     e18:	9e 3f       	cpi	r25, 0xFE	; 254
     e1a:	08 f0       	brcs	.+2      	; 0xe1e <__addsf3x+0x9a>
     e1c:	b0 cf       	rjmp	.-160    	; 0xd7e <__addsf3+0x28>
     e1e:	93 95       	inc	r25
     e20:	88 0f       	add	r24, r24
     e22:	08 f0       	brcs	.+2      	; 0xe26 <__addsf3x+0xa2>
     e24:	99 27       	eor	r25, r25
     e26:	ee 0f       	add	r30, r30
     e28:	97 95       	ror	r25
     e2a:	87 95       	ror	r24
     e2c:	08 95       	ret

00000e2e <__cmpsf2>:
     e2e:	0e 94 01 08 	call	0x1002	; 0x1002 <__fp_cmp>
     e32:	08 f4       	brcc	.+2      	; 0xe36 <__cmpsf2+0x8>
     e34:	81 e0       	ldi	r24, 0x01	; 1
     e36:	08 95       	ret

00000e38 <__divsf3>:
     e38:	0e 94 30 07 	call	0xe60	; 0xe60 <__divsf3x>
     e3c:	0c 94 3c 08 	jmp	0x1078	; 0x1078 <__fp_round>
     e40:	0e 94 35 08 	call	0x106a	; 0x106a <__fp_pscB>
     e44:	58 f0       	brcs	.+22     	; 0xe5c <__divsf3+0x24>
     e46:	0e 94 2e 08 	call	0x105c	; 0x105c <__fp_pscA>
     e4a:	40 f0       	brcs	.+16     	; 0xe5c <__divsf3+0x24>
     e4c:	29 f4       	brne	.+10     	; 0xe58 <__divsf3+0x20>
     e4e:	5f 3f       	cpi	r21, 0xFF	; 255
     e50:	29 f0       	breq	.+10     	; 0xe5c <__divsf3+0x24>
     e52:	0c 94 25 08 	jmp	0x104a	; 0x104a <__fp_inf>
     e56:	51 11       	cpse	r21, r1
     e58:	0c 94 70 08 	jmp	0x10e0	; 0x10e0 <__fp_szero>
     e5c:	0c 94 2b 08 	jmp	0x1056	; 0x1056 <__fp_nan>

00000e60 <__divsf3x>:
     e60:	0e 94 4d 08 	call	0x109a	; 0x109a <__fp_split3>
     e64:	68 f3       	brcs	.-38     	; 0xe40 <__divsf3+0x8>

00000e66 <__divsf3_pse>:
     e66:	99 23       	and	r25, r25
     e68:	b1 f3       	breq	.-20     	; 0xe56 <__divsf3+0x1e>
     e6a:	55 23       	and	r21, r21
     e6c:	91 f3       	breq	.-28     	; 0xe52 <__divsf3+0x1a>
     e6e:	95 1b       	sub	r25, r21
     e70:	55 0b       	sbc	r21, r21
     e72:	bb 27       	eor	r27, r27
     e74:	aa 27       	eor	r26, r26
     e76:	62 17       	cp	r22, r18
     e78:	73 07       	cpc	r23, r19
     e7a:	84 07       	cpc	r24, r20
     e7c:	38 f0       	brcs	.+14     	; 0xe8c <__divsf3_pse+0x26>
     e7e:	9f 5f       	subi	r25, 0xFF	; 255
     e80:	5f 4f       	sbci	r21, 0xFF	; 255
     e82:	22 0f       	add	r18, r18
     e84:	33 1f       	adc	r19, r19
     e86:	44 1f       	adc	r20, r20
     e88:	aa 1f       	adc	r26, r26
     e8a:	a9 f3       	breq	.-22     	; 0xe76 <__divsf3_pse+0x10>
     e8c:	35 d0       	rcall	.+106    	; 0xef8 <__divsf3_pse+0x92>
     e8e:	0e 2e       	mov	r0, r30
     e90:	3a f0       	brmi	.+14     	; 0xea0 <__divsf3_pse+0x3a>
     e92:	e0 e8       	ldi	r30, 0x80	; 128
     e94:	32 d0       	rcall	.+100    	; 0xefa <__divsf3_pse+0x94>
     e96:	91 50       	subi	r25, 0x01	; 1
     e98:	50 40       	sbci	r21, 0x00	; 0
     e9a:	e6 95       	lsr	r30
     e9c:	00 1c       	adc	r0, r0
     e9e:	ca f7       	brpl	.-14     	; 0xe92 <__divsf3_pse+0x2c>
     ea0:	2b d0       	rcall	.+86     	; 0xef8 <__divsf3_pse+0x92>
     ea2:	fe 2f       	mov	r31, r30
     ea4:	29 d0       	rcall	.+82     	; 0xef8 <__divsf3_pse+0x92>
     ea6:	66 0f       	add	r22, r22
     ea8:	77 1f       	adc	r23, r23
     eaa:	88 1f       	adc	r24, r24
     eac:	bb 1f       	adc	r27, r27
     eae:	26 17       	cp	r18, r22
     eb0:	37 07       	cpc	r19, r23
     eb2:	48 07       	cpc	r20, r24
     eb4:	ab 07       	cpc	r26, r27
     eb6:	b0 e8       	ldi	r27, 0x80	; 128
     eb8:	09 f0       	breq	.+2      	; 0xebc <__divsf3_pse+0x56>
     eba:	bb 0b       	sbc	r27, r27
     ebc:	80 2d       	mov	r24, r0
     ebe:	bf 01       	movw	r22, r30
     ec0:	ff 27       	eor	r31, r31
     ec2:	93 58       	subi	r25, 0x83	; 131
     ec4:	5f 4f       	sbci	r21, 0xFF	; 255
     ec6:	3a f0       	brmi	.+14     	; 0xed6 <__divsf3_pse+0x70>
     ec8:	9e 3f       	cpi	r25, 0xFE	; 254
     eca:	51 05       	cpc	r21, r1
     ecc:	78 f0       	brcs	.+30     	; 0xeec <__divsf3_pse+0x86>
     ece:	0c 94 25 08 	jmp	0x104a	; 0x104a <__fp_inf>
     ed2:	0c 94 70 08 	jmp	0x10e0	; 0x10e0 <__fp_szero>
     ed6:	5f 3f       	cpi	r21, 0xFF	; 255
     ed8:	e4 f3       	brlt	.-8      	; 0xed2 <__divsf3_pse+0x6c>
     eda:	98 3e       	cpi	r25, 0xE8	; 232
     edc:	d4 f3       	brlt	.-12     	; 0xed2 <__divsf3_pse+0x6c>
     ede:	86 95       	lsr	r24
     ee0:	77 95       	ror	r23
     ee2:	67 95       	ror	r22
     ee4:	b7 95       	ror	r27
     ee6:	f7 95       	ror	r31
     ee8:	9f 5f       	subi	r25, 0xFF	; 255
     eea:	c9 f7       	brne	.-14     	; 0xede <__divsf3_pse+0x78>
     eec:	88 0f       	add	r24, r24
     eee:	91 1d       	adc	r25, r1
     ef0:	96 95       	lsr	r25
     ef2:	87 95       	ror	r24
     ef4:	97 f9       	bld	r25, 7
     ef6:	08 95       	ret
     ef8:	e1 e0       	ldi	r30, 0x01	; 1
     efa:	66 0f       	add	r22, r22
     efc:	77 1f       	adc	r23, r23
     efe:	88 1f       	adc	r24, r24
     f00:	bb 1f       	adc	r27, r27
     f02:	62 17       	cp	r22, r18
     f04:	73 07       	cpc	r23, r19
     f06:	84 07       	cpc	r24, r20
     f08:	ba 07       	cpc	r27, r26
     f0a:	20 f0       	brcs	.+8      	; 0xf14 <__divsf3_pse+0xae>
     f0c:	62 1b       	sub	r22, r18
     f0e:	73 0b       	sbc	r23, r19
     f10:	84 0b       	sbc	r24, r20
     f12:	ba 0b       	sbc	r27, r26
     f14:	ee 1f       	adc	r30, r30
     f16:	88 f7       	brcc	.-30     	; 0xefa <__divsf3_pse+0x94>
     f18:	e0 95       	com	r30
     f1a:	08 95       	ret

00000f1c <__fixsfsi>:
     f1c:	0e 94 95 07 	call	0xf2a	; 0xf2a <__fixunssfsi>
     f20:	68 94       	set
     f22:	b1 11       	cpse	r27, r1
     f24:	0c 94 70 08 	jmp	0x10e0	; 0x10e0 <__fp_szero>
     f28:	08 95       	ret

00000f2a <__fixunssfsi>:
     f2a:	0e 94 55 08 	call	0x10aa	; 0x10aa <__fp_splitA>
     f2e:	88 f0       	brcs	.+34     	; 0xf52 <__fixunssfsi+0x28>
     f30:	9f 57       	subi	r25, 0x7F	; 127
     f32:	98 f0       	brcs	.+38     	; 0xf5a <__fixunssfsi+0x30>
     f34:	b9 2f       	mov	r27, r25
     f36:	99 27       	eor	r25, r25
     f38:	b7 51       	subi	r27, 0x17	; 23
     f3a:	b0 f0       	brcs	.+44     	; 0xf68 <__fixunssfsi+0x3e>
     f3c:	e1 f0       	breq	.+56     	; 0xf76 <__fixunssfsi+0x4c>
     f3e:	66 0f       	add	r22, r22
     f40:	77 1f       	adc	r23, r23
     f42:	88 1f       	adc	r24, r24
     f44:	99 1f       	adc	r25, r25
     f46:	1a f0       	brmi	.+6      	; 0xf4e <__fixunssfsi+0x24>
     f48:	ba 95       	dec	r27
     f4a:	c9 f7       	brne	.-14     	; 0xf3e <__fixunssfsi+0x14>
     f4c:	14 c0       	rjmp	.+40     	; 0xf76 <__fixunssfsi+0x4c>
     f4e:	b1 30       	cpi	r27, 0x01	; 1
     f50:	91 f0       	breq	.+36     	; 0xf76 <__fixunssfsi+0x4c>
     f52:	0e 94 6f 08 	call	0x10de	; 0x10de <__fp_zero>
     f56:	b1 e0       	ldi	r27, 0x01	; 1
     f58:	08 95       	ret
     f5a:	0c 94 6f 08 	jmp	0x10de	; 0x10de <__fp_zero>
     f5e:	67 2f       	mov	r22, r23
     f60:	78 2f       	mov	r23, r24
     f62:	88 27       	eor	r24, r24
     f64:	b8 5f       	subi	r27, 0xF8	; 248
     f66:	39 f0       	breq	.+14     	; 0xf76 <__fixunssfsi+0x4c>
     f68:	b9 3f       	cpi	r27, 0xF9	; 249
     f6a:	cc f3       	brlt	.-14     	; 0xf5e <__fixunssfsi+0x34>
     f6c:	86 95       	lsr	r24
     f6e:	77 95       	ror	r23
     f70:	67 95       	ror	r22
     f72:	b3 95       	inc	r27
     f74:	d9 f7       	brne	.-10     	; 0xf6c <__fixunssfsi+0x42>
     f76:	3e f4       	brtc	.+14     	; 0xf86 <__fixunssfsi+0x5c>
     f78:	90 95       	com	r25
     f7a:	80 95       	com	r24
     f7c:	70 95       	com	r23
     f7e:	61 95       	neg	r22
     f80:	7f 4f       	sbci	r23, 0xFF	; 255
     f82:	8f 4f       	sbci	r24, 0xFF	; 255
     f84:	9f 4f       	sbci	r25, 0xFF	; 255
     f86:	08 95       	ret

00000f88 <__floatunsisf>:
     f88:	e8 94       	clt
     f8a:	09 c0       	rjmp	.+18     	; 0xf9e <__floatsisf+0x12>

00000f8c <__floatsisf>:
     f8c:	97 fb       	bst	r25, 7
     f8e:	3e f4       	brtc	.+14     	; 0xf9e <__floatsisf+0x12>
     f90:	90 95       	com	r25
     f92:	80 95       	com	r24
     f94:	70 95       	com	r23
     f96:	61 95       	neg	r22
     f98:	7f 4f       	sbci	r23, 0xFF	; 255
     f9a:	8f 4f       	sbci	r24, 0xFF	; 255
     f9c:	9f 4f       	sbci	r25, 0xFF	; 255
     f9e:	99 23       	and	r25, r25
     fa0:	a9 f0       	breq	.+42     	; 0xfcc <__floatsisf+0x40>
     fa2:	f9 2f       	mov	r31, r25
     fa4:	96 e9       	ldi	r25, 0x96	; 150
     fa6:	bb 27       	eor	r27, r27
     fa8:	93 95       	inc	r25
     faa:	f6 95       	lsr	r31
     fac:	87 95       	ror	r24
     fae:	77 95       	ror	r23
     fb0:	67 95       	ror	r22
     fb2:	b7 95       	ror	r27
     fb4:	f1 11       	cpse	r31, r1
     fb6:	f8 cf       	rjmp	.-16     	; 0xfa8 <__floatsisf+0x1c>
     fb8:	fa f4       	brpl	.+62     	; 0xff8 <__floatsisf+0x6c>
     fba:	bb 0f       	add	r27, r27
     fbc:	11 f4       	brne	.+4      	; 0xfc2 <__floatsisf+0x36>
     fbe:	60 ff       	sbrs	r22, 0
     fc0:	1b c0       	rjmp	.+54     	; 0xff8 <__floatsisf+0x6c>
     fc2:	6f 5f       	subi	r22, 0xFF	; 255
     fc4:	7f 4f       	sbci	r23, 0xFF	; 255
     fc6:	8f 4f       	sbci	r24, 0xFF	; 255
     fc8:	9f 4f       	sbci	r25, 0xFF	; 255
     fca:	16 c0       	rjmp	.+44     	; 0xff8 <__floatsisf+0x6c>
     fcc:	88 23       	and	r24, r24
     fce:	11 f0       	breq	.+4      	; 0xfd4 <__floatsisf+0x48>
     fd0:	96 e9       	ldi	r25, 0x96	; 150
     fd2:	11 c0       	rjmp	.+34     	; 0xff6 <__floatsisf+0x6a>
     fd4:	77 23       	and	r23, r23
     fd6:	21 f0       	breq	.+8      	; 0xfe0 <__floatsisf+0x54>
     fd8:	9e e8       	ldi	r25, 0x8E	; 142
     fda:	87 2f       	mov	r24, r23
     fdc:	76 2f       	mov	r23, r22
     fde:	05 c0       	rjmp	.+10     	; 0xfea <__floatsisf+0x5e>
     fe0:	66 23       	and	r22, r22
     fe2:	71 f0       	breq	.+28     	; 0x1000 <__floatsisf+0x74>
     fe4:	96 e8       	ldi	r25, 0x86	; 134
     fe6:	86 2f       	mov	r24, r22
     fe8:	70 e0       	ldi	r23, 0x00	; 0
     fea:	60 e0       	ldi	r22, 0x00	; 0
     fec:	2a f0       	brmi	.+10     	; 0xff8 <__floatsisf+0x6c>
     fee:	9a 95       	dec	r25
     ff0:	66 0f       	add	r22, r22
     ff2:	77 1f       	adc	r23, r23
     ff4:	88 1f       	adc	r24, r24
     ff6:	da f7       	brpl	.-10     	; 0xfee <__floatsisf+0x62>
     ff8:	88 0f       	add	r24, r24
     ffa:	96 95       	lsr	r25
     ffc:	87 95       	ror	r24
     ffe:	97 f9       	bld	r25, 7
    1000:	08 95       	ret

00001002 <__fp_cmp>:
    1002:	99 0f       	add	r25, r25
    1004:	00 08       	sbc	r0, r0
    1006:	55 0f       	add	r21, r21
    1008:	aa 0b       	sbc	r26, r26
    100a:	e0 e8       	ldi	r30, 0x80	; 128
    100c:	fe ef       	ldi	r31, 0xFE	; 254
    100e:	16 16       	cp	r1, r22
    1010:	17 06       	cpc	r1, r23
    1012:	e8 07       	cpc	r30, r24
    1014:	f9 07       	cpc	r31, r25
    1016:	c0 f0       	brcs	.+48     	; 0x1048 <__fp_cmp+0x46>
    1018:	12 16       	cp	r1, r18
    101a:	13 06       	cpc	r1, r19
    101c:	e4 07       	cpc	r30, r20
    101e:	f5 07       	cpc	r31, r21
    1020:	98 f0       	brcs	.+38     	; 0x1048 <__fp_cmp+0x46>
    1022:	62 1b       	sub	r22, r18
    1024:	73 0b       	sbc	r23, r19
    1026:	84 0b       	sbc	r24, r20
    1028:	95 0b       	sbc	r25, r21
    102a:	39 f4       	brne	.+14     	; 0x103a <__fp_cmp+0x38>
    102c:	0a 26       	eor	r0, r26
    102e:	61 f0       	breq	.+24     	; 0x1048 <__fp_cmp+0x46>
    1030:	23 2b       	or	r18, r19
    1032:	24 2b       	or	r18, r20
    1034:	25 2b       	or	r18, r21
    1036:	21 f4       	brne	.+8      	; 0x1040 <__fp_cmp+0x3e>
    1038:	08 95       	ret
    103a:	0a 26       	eor	r0, r26
    103c:	09 f4       	brne	.+2      	; 0x1040 <__fp_cmp+0x3e>
    103e:	a1 40       	sbci	r26, 0x01	; 1
    1040:	a6 95       	lsr	r26
    1042:	8f ef       	ldi	r24, 0xFF	; 255
    1044:	81 1d       	adc	r24, r1
    1046:	81 1d       	adc	r24, r1
    1048:	08 95       	ret

0000104a <__fp_inf>:
    104a:	97 f9       	bld	r25, 7
    104c:	9f 67       	ori	r25, 0x7F	; 127
    104e:	80 e8       	ldi	r24, 0x80	; 128
    1050:	70 e0       	ldi	r23, 0x00	; 0
    1052:	60 e0       	ldi	r22, 0x00	; 0
    1054:	08 95       	ret

00001056 <__fp_nan>:
    1056:	9f ef       	ldi	r25, 0xFF	; 255
    1058:	80 ec       	ldi	r24, 0xC0	; 192
    105a:	08 95       	ret

0000105c <__fp_pscA>:
    105c:	00 24       	eor	r0, r0
    105e:	0a 94       	dec	r0
    1060:	16 16       	cp	r1, r22
    1062:	17 06       	cpc	r1, r23
    1064:	18 06       	cpc	r1, r24
    1066:	09 06       	cpc	r0, r25
    1068:	08 95       	ret

0000106a <__fp_pscB>:
    106a:	00 24       	eor	r0, r0
    106c:	0a 94       	dec	r0
    106e:	12 16       	cp	r1, r18
    1070:	13 06       	cpc	r1, r19
    1072:	14 06       	cpc	r1, r20
    1074:	05 06       	cpc	r0, r21
    1076:	08 95       	ret

00001078 <__fp_round>:
    1078:	09 2e       	mov	r0, r25
    107a:	03 94       	inc	r0
    107c:	00 0c       	add	r0, r0
    107e:	11 f4       	brne	.+4      	; 0x1084 <__fp_round+0xc>
    1080:	88 23       	and	r24, r24
    1082:	52 f0       	brmi	.+20     	; 0x1098 <__fp_round+0x20>
    1084:	bb 0f       	add	r27, r27
    1086:	40 f4       	brcc	.+16     	; 0x1098 <__fp_round+0x20>
    1088:	bf 2b       	or	r27, r31
    108a:	11 f4       	brne	.+4      	; 0x1090 <__fp_round+0x18>
    108c:	60 ff       	sbrs	r22, 0
    108e:	04 c0       	rjmp	.+8      	; 0x1098 <__fp_round+0x20>
    1090:	6f 5f       	subi	r22, 0xFF	; 255
    1092:	7f 4f       	sbci	r23, 0xFF	; 255
    1094:	8f 4f       	sbci	r24, 0xFF	; 255
    1096:	9f 4f       	sbci	r25, 0xFF	; 255
    1098:	08 95       	ret

0000109a <__fp_split3>:
    109a:	57 fd       	sbrc	r21, 7
    109c:	90 58       	subi	r25, 0x80	; 128
    109e:	44 0f       	add	r20, r20
    10a0:	55 1f       	adc	r21, r21
    10a2:	59 f0       	breq	.+22     	; 0x10ba <__fp_splitA+0x10>
    10a4:	5f 3f       	cpi	r21, 0xFF	; 255
    10a6:	71 f0       	breq	.+28     	; 0x10c4 <__fp_splitA+0x1a>
    10a8:	47 95       	ror	r20

000010aa <__fp_splitA>:
    10aa:	88 0f       	add	r24, r24
    10ac:	97 fb       	bst	r25, 7
    10ae:	99 1f       	adc	r25, r25
    10b0:	61 f0       	breq	.+24     	; 0x10ca <__fp_splitA+0x20>
    10b2:	9f 3f       	cpi	r25, 0xFF	; 255
    10b4:	79 f0       	breq	.+30     	; 0x10d4 <__fp_splitA+0x2a>
    10b6:	87 95       	ror	r24
    10b8:	08 95       	ret
    10ba:	12 16       	cp	r1, r18
    10bc:	13 06       	cpc	r1, r19
    10be:	14 06       	cpc	r1, r20
    10c0:	55 1f       	adc	r21, r21
    10c2:	f2 cf       	rjmp	.-28     	; 0x10a8 <__fp_split3+0xe>
    10c4:	46 95       	lsr	r20
    10c6:	f1 df       	rcall	.-30     	; 0x10aa <__fp_splitA>
    10c8:	08 c0       	rjmp	.+16     	; 0x10da <__fp_splitA+0x30>
    10ca:	16 16       	cp	r1, r22
    10cc:	17 06       	cpc	r1, r23
    10ce:	18 06       	cpc	r1, r24
    10d0:	99 1f       	adc	r25, r25
    10d2:	f1 cf       	rjmp	.-30     	; 0x10b6 <__fp_splitA+0xc>
    10d4:	86 95       	lsr	r24
    10d6:	71 05       	cpc	r23, r1
    10d8:	61 05       	cpc	r22, r1
    10da:	08 94       	sec
    10dc:	08 95       	ret

000010de <__fp_zero>:
    10de:	e8 94       	clt

000010e0 <__fp_szero>:
    10e0:	bb 27       	eor	r27, r27
    10e2:	66 27       	eor	r22, r22
    10e4:	77 27       	eor	r23, r23
    10e6:	cb 01       	movw	r24, r22
    10e8:	97 f9       	bld	r25, 7
    10ea:	08 95       	ret

000010ec <__mulsf3>:
    10ec:	0e 94 89 08 	call	0x1112	; 0x1112 <__mulsf3x>
    10f0:	0c 94 3c 08 	jmp	0x1078	; 0x1078 <__fp_round>
    10f4:	0e 94 2e 08 	call	0x105c	; 0x105c <__fp_pscA>
    10f8:	38 f0       	brcs	.+14     	; 0x1108 <__mulsf3+0x1c>
    10fa:	0e 94 35 08 	call	0x106a	; 0x106a <__fp_pscB>
    10fe:	20 f0       	brcs	.+8      	; 0x1108 <__mulsf3+0x1c>
    1100:	95 23       	and	r25, r21
    1102:	11 f0       	breq	.+4      	; 0x1108 <__mulsf3+0x1c>
    1104:	0c 94 25 08 	jmp	0x104a	; 0x104a <__fp_inf>
    1108:	0c 94 2b 08 	jmp	0x1056	; 0x1056 <__fp_nan>
    110c:	11 24       	eor	r1, r1
    110e:	0c 94 70 08 	jmp	0x10e0	; 0x10e0 <__fp_szero>

00001112 <__mulsf3x>:
    1112:	0e 94 4d 08 	call	0x109a	; 0x109a <__fp_split3>
    1116:	70 f3       	brcs	.-36     	; 0x10f4 <__mulsf3+0x8>

00001118 <__mulsf3_pse>:
    1118:	95 9f       	mul	r25, r21
    111a:	c1 f3       	breq	.-16     	; 0x110c <__mulsf3+0x20>
    111c:	95 0f       	add	r25, r21
    111e:	50 e0       	ldi	r21, 0x00	; 0
    1120:	55 1f       	adc	r21, r21
    1122:	62 9f       	mul	r22, r18
    1124:	f0 01       	movw	r30, r0
    1126:	72 9f       	mul	r23, r18
    1128:	bb 27       	eor	r27, r27
    112a:	f0 0d       	add	r31, r0
    112c:	b1 1d       	adc	r27, r1
    112e:	63 9f       	mul	r22, r19
    1130:	aa 27       	eor	r26, r26
    1132:	f0 0d       	add	r31, r0
    1134:	b1 1d       	adc	r27, r1
    1136:	aa 1f       	adc	r26, r26
    1138:	64 9f       	mul	r22, r20
    113a:	66 27       	eor	r22, r22
    113c:	b0 0d       	add	r27, r0
    113e:	a1 1d       	adc	r26, r1
    1140:	66 1f       	adc	r22, r22
    1142:	82 9f       	mul	r24, r18
    1144:	22 27       	eor	r18, r18
    1146:	b0 0d       	add	r27, r0
    1148:	a1 1d       	adc	r26, r1
    114a:	62 1f       	adc	r22, r18
    114c:	73 9f       	mul	r23, r19
    114e:	b0 0d       	add	r27, r0
    1150:	a1 1d       	adc	r26, r1
    1152:	62 1f       	adc	r22, r18
    1154:	83 9f       	mul	r24, r19
    1156:	a0 0d       	add	r26, r0
    1158:	61 1d       	adc	r22, r1
    115a:	22 1f       	adc	r18, r18
    115c:	74 9f       	mul	r23, r20
    115e:	33 27       	eor	r19, r19
    1160:	a0 0d       	add	r26, r0
    1162:	61 1d       	adc	r22, r1
    1164:	23 1f       	adc	r18, r19
    1166:	84 9f       	mul	r24, r20
    1168:	60 0d       	add	r22, r0
    116a:	21 1d       	adc	r18, r1
    116c:	82 2f       	mov	r24, r18
    116e:	76 2f       	mov	r23, r22
    1170:	6a 2f       	mov	r22, r26
    1172:	11 24       	eor	r1, r1
    1174:	9f 57       	subi	r25, 0x7F	; 127
    1176:	50 40       	sbci	r21, 0x00	; 0
    1178:	9a f0       	brmi	.+38     	; 0x11a0 <__mulsf3_pse+0x88>
    117a:	f1 f0       	breq	.+60     	; 0x11b8 <__mulsf3_pse+0xa0>
    117c:	88 23       	and	r24, r24
    117e:	4a f0       	brmi	.+18     	; 0x1192 <__mulsf3_pse+0x7a>
    1180:	ee 0f       	add	r30, r30
    1182:	ff 1f       	adc	r31, r31
    1184:	bb 1f       	adc	r27, r27
    1186:	66 1f       	adc	r22, r22
    1188:	77 1f       	adc	r23, r23
    118a:	88 1f       	adc	r24, r24
    118c:	91 50       	subi	r25, 0x01	; 1
    118e:	50 40       	sbci	r21, 0x00	; 0
    1190:	a9 f7       	brne	.-22     	; 0x117c <__mulsf3_pse+0x64>
    1192:	9e 3f       	cpi	r25, 0xFE	; 254
    1194:	51 05       	cpc	r21, r1
    1196:	80 f0       	brcs	.+32     	; 0x11b8 <__mulsf3_pse+0xa0>
    1198:	0c 94 25 08 	jmp	0x104a	; 0x104a <__fp_inf>
    119c:	0c 94 70 08 	jmp	0x10e0	; 0x10e0 <__fp_szero>
    11a0:	5f 3f       	cpi	r21, 0xFF	; 255
    11a2:	e4 f3       	brlt	.-8      	; 0x119c <__mulsf3_pse+0x84>
    11a4:	98 3e       	cpi	r25, 0xE8	; 232
    11a6:	d4 f3       	brlt	.-12     	; 0x119c <__mulsf3_pse+0x84>
    11a8:	86 95       	lsr	r24
    11aa:	77 95       	ror	r23
    11ac:	67 95       	ror	r22
    11ae:	b7 95       	ror	r27
    11b0:	f7 95       	ror	r31
    11b2:	e7 95       	ror	r30
    11b4:	9f 5f       	subi	r25, 0xFF	; 255
    11b6:	c1 f7       	brne	.-16     	; 0x11a8 <__mulsf3_pse+0x90>
    11b8:	fe 2b       	or	r31, r30
    11ba:	88 0f       	add	r24, r24
    11bc:	91 1d       	adc	r25, r1
    11be:	96 95       	lsr	r25
    11c0:	87 95       	ror	r24
    11c2:	97 f9       	bld	r25, 7
    11c4:	08 95       	ret

000011c6 <__divmodhi4>:
    11c6:	97 fb       	bst	r25, 7
    11c8:	07 2e       	mov	r0, r23
    11ca:	16 f4       	brtc	.+4      	; 0x11d0 <__divmodhi4+0xa>
    11cc:	00 94       	com	r0
    11ce:	07 d0       	rcall	.+14     	; 0x11de <__divmodhi4_neg1>
    11d0:	77 fd       	sbrc	r23, 7
    11d2:	09 d0       	rcall	.+18     	; 0x11e6 <__divmodhi4_neg2>
    11d4:	0e 94 f7 08 	call	0x11ee	; 0x11ee <__udivmodhi4>
    11d8:	07 fc       	sbrc	r0, 7
    11da:	05 d0       	rcall	.+10     	; 0x11e6 <__divmodhi4_neg2>
    11dc:	3e f4       	brtc	.+14     	; 0x11ec <__divmodhi4_exit>

000011de <__divmodhi4_neg1>:
    11de:	90 95       	com	r25
    11e0:	81 95       	neg	r24
    11e2:	9f 4f       	sbci	r25, 0xFF	; 255
    11e4:	08 95       	ret

000011e6 <__divmodhi4_neg2>:
    11e6:	70 95       	com	r23
    11e8:	61 95       	neg	r22
    11ea:	7f 4f       	sbci	r23, 0xFF	; 255

000011ec <__divmodhi4_exit>:
    11ec:	08 95       	ret

000011ee <__udivmodhi4>:
    11ee:	aa 1b       	sub	r26, r26
    11f0:	bb 1b       	sub	r27, r27
    11f2:	51 e1       	ldi	r21, 0x11	; 17
    11f4:	07 c0       	rjmp	.+14     	; 0x1204 <__udivmodhi4_ep>

000011f6 <__udivmodhi4_loop>:
    11f6:	aa 1f       	adc	r26, r26
    11f8:	bb 1f       	adc	r27, r27
    11fa:	a6 17       	cp	r26, r22
    11fc:	b7 07       	cpc	r27, r23
    11fe:	10 f0       	brcs	.+4      	; 0x1204 <__udivmodhi4_ep>
    1200:	a6 1b       	sub	r26, r22
    1202:	b7 0b       	sbc	r27, r23

00001204 <__udivmodhi4_ep>:
    1204:	88 1f       	adc	r24, r24
    1206:	99 1f       	adc	r25, r25
    1208:	5a 95       	dec	r21
    120a:	a9 f7       	brne	.-22     	; 0x11f6 <__udivmodhi4_loop>
    120c:	80 95       	com	r24
    120e:	90 95       	com	r25
    1210:	bc 01       	movw	r22, r24
    1212:	cd 01       	movw	r24, r26
    1214:	08 95       	ret

00001216 <_exit>:
    1216:	f8 94       	cli

00001218 <__stop_program>:
    1218:	ff cf       	rjmp	.-2      	; 0x1218 <__stop_program>
